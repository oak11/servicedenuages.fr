<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Service de nuages</title><link>http://www.servicedenuages.fr/en/</link><description></description><atom:link href="http://www.servicedenuages.fr/feeds/service-de-nuages.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 27 Nov 2015 00:00:00 +0100</lastBuildDate><item><title>How to make the Kinto instances discoverable?</title><link>http://www.servicedenuages.fr/en/discovery-of-kinto-servers</link><description>&lt;blockquote class="epigraph"&gt;
About Me&lt;/blockquote&gt;
&lt;p&gt;Hi! I am Shweta Oak. I got the opportunity to be part of Mozilla's Kinto team.
Here, my work focuses on the discovery of Kinto servers.
I am passionate about Technology and believe in applying it to enhance the lives of people.
I like to solve problems. While solving problems, I like exploring and crafting various
solutions to find the best one. I am enthusiastic about taking up new challenges, learning
new things and discovering my potential.&lt;/p&gt;
&lt;div class="section" id="how-does-an-application-discover-the-location-of-a-kinto-server"&gt;
&lt;h2&gt;How does an application discover the location of a Kinto server?&lt;/h2&gt;
&lt;p&gt;Unlike Parse or Firebase which are centralized services, Kinto can be ran by anyone
and anywhere. However, there has to be a way for the user to choose where the data
are getting stored. In addition to configuring the frontend app for their personal
server, users can get the  location of the server in the form of a URL which can be
shared with another user in order to collaborate and share data between multiple
users on the same Kinto server.&lt;/p&gt;
&lt;p&gt;To solve this problem, the following approach can be taken:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="let-the-user-enter-the-location-of-its-kinto-instance-the-first-time"&gt;
&lt;h2&gt;Let the user enter the location of its Kinto instance, the first time.&lt;/h2&gt;
&lt;p&gt;Add a way, on client side, to specify where the server is. For instance, this should
be done in JavaScript and HTML on  top of the Kinto.js client.
It is basically a user interface for how to specify the "remote server" to use. The
user has to enter the location of the server only once, the first time he uses a
Kinto instance, later on, this location will be discovered.&lt;/p&gt;
&lt;p&gt;The best way to start doing this is to do it in a webpage that uses Kinto.js and let
the user specify the server location. Once we have this, we will need to make this
project re-usable by others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="store-this-location-remotely"&gt;
&lt;h2&gt;Store this location remotely&lt;/h2&gt;
&lt;p&gt;Then, it would be good if we were able, for a given authenticated user, to automatically
discover where is their Kinto instance is located. To do that we will need to find a solution
to save this location somewhere when the user enters the location of the server for the first
time and then, the information will be discovered.&lt;/p&gt;
&lt;p&gt;We also need to keep in mind that users may have multiple Kinto instances with regards to the
application they will be using. The discovery of Kinto will be cross application too.&lt;/p&gt;
&lt;p&gt;We will now need to store this information remotely. This is where the ideas of a central
repository and of a Distributed Hash Table (DHT) come into play. Since a DHT is by far more
complex than a central repository, we will start with the use of a central server.&lt;/p&gt;
&lt;p&gt;(B1) Central Repository:&lt;/p&gt;
&lt;p&gt;A small Javascript helper to lookup the location of the server remotely once the user is connected. The flow would then look like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Connect to your account (Github, Twitter, FxA) using OAuth.&lt;/li&gt;
&lt;li&gt;The client fetches the location of the Kinto server on a central Kinto collection using the user credentials.&lt;/li&gt;
&lt;li&gt;The Kinto.js collection is configured to use this remote.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;pros of using a central repository:
Its really easy to setup and implement. The application searches for the userâ€™s server by looking up the central repository.&lt;/p&gt;
&lt;p&gt;cons of using a central repository:
The user needs to trust a 3rd party as the links to the information of the user is being stored in one place.
There is a possibility of leak of information that someone is connected to a Kinto instance, and where this instance is.&lt;/p&gt;
&lt;p&gt;(B2) Distributed Hash Table (DHT)&lt;/p&gt;
&lt;p&gt;Once we have this mechanism in place, we can expand it in order to rely on a DHT rather than on a central repositories. DHT is a decentralized distributed system that provides a lookup service similar to a hash table. Different options can be used here (Matrix.org is one).&lt;/p&gt;
&lt;p&gt;pros of using DHT:
* The user does not have to trust one server only. There are multiple servers that hold pieces of the data.
* It is possible to add your own server to the DHT.&lt;/p&gt;
&lt;p&gt;cons of using DHT:
* It might be complex to deploy.
* Harder to implement and verify
* It might be an overkill solution.
* All the data in a DHT are public so we would necessarily need to encrypt the data there.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="eventually-at-the-end-we-should-expand-this-mechanism-to-other-services-locations-using-host-meta"&gt;
&lt;h2&gt;Eventually at the end we should expand this mechanism to other services locations, using Host-Meta.&lt;/h2&gt;
&lt;blockquote&gt;
In addition to discovering the location of the Kinto server, add the possibility to discover other
services (such as the identity service provider for the remote instance (ie Firefox Accounts))
using Host-Meta. Host-Meta is a browser module that is used for looking up the metadata of a domain
name. It is useful for discovery of services associated with the host.&lt;/blockquote&gt;
&lt;p&gt;And once we're there, all the Kinto instances will be discoverable !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="note-to-the-reader"&gt;
&lt;h2&gt;Note to the reader:&lt;/h2&gt;
&lt;p&gt;Thanks for your interest in this article, If you think there is a better approach we can take,
than the one given above or, if there is anything you would like to share with us regarding
this article, do comment below. We look forward to exploring more solutions and making the
project even better through your feedback :)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Fri, 27 Nov 2015 00:00:00 +0100</pubDate><guid>tag:www.servicedenuages.fr,2015-11-27:en/discovery-of-kinto-servers</guid></item><item><title>Kinto.js 1.0 released</title><link>http://www.servicedenuages.fr/en/kinto-js-1-0-released</link><description>&lt;p&gt;&lt;a class="reference external" href="https://kintojs.readthedocs.org/"&gt;Kinto.js&lt;/a&gt; is an offline-first JavaScript client leveraging the &lt;a class="reference external" href="https://kinto.readthedocs.org/"&gt;Kinto API&lt;/a&gt; for data synchronization. In a world where connectivity isn't always guaranteed, local persistence in the browser has become an &lt;a class="reference external" href="http://offlinefirst.org/"&gt;identified priority&lt;/a&gt; for Web applications, especially on mobile.&lt;/p&gt;
&lt;p&gt;The basic principle is simple; save your data locally, assuming there's no network connectivity. Then as soon as it's available, retrieve remote changes and push your local data to a remote server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;kinto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Kinto&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://kinto.dev.mozaws.net/v1/"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;kinto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"tasks"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Test kinto.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Data have been synchronized!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Local persistence in the browser is achieved using &lt;a class="reference external" href="https://www.w3.org/TR/IndexedDB/"&gt;IndexedDB&lt;/a&gt;, and we've tried hard to hide its inherent low-level usage complexity â€” mainly due to its fully asynchronous natureÂ â€” through a simpler yet convenient &lt;a class="reference external" href="https://www.promisejs.org/"&gt;Promises&lt;/a&gt; based API.&lt;/p&gt;
&lt;p&gt;Kinto.js provides basic local CRUD operations for &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#creating-a-record"&gt;creating&lt;/a&gt;, &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#updating-a-record"&gt;updating&lt;/a&gt;, &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#deleting-records"&gt;deleting&lt;/a&gt;, &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#retrieving-a-single-record"&gt;retrieving&lt;/a&gt; and &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#listing-records"&gt;listing&lt;/a&gt; records from a local collection. Each time you want to reflect its state to a remote server, you only ever have to &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#fetching-and-publishing-changes"&gt;call the sync() method&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;We've set up a &lt;a class="reference external" href="https://kinto.github.io/kinto.js/"&gt;simple demo application&lt;/a&gt; using a public Mozilla test server instance, so you can check how it behaves by yourself if you're interested. The source code of this app is &lt;a class="reference external" href="https://github.com/Kinto/kinto.js/blob/66ef077796a8e4a8b0d9a95389a61ea57cbbfde3/demo/demo.js"&gt;available on Github&lt;/a&gt;, and is also the base use case for the &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/tutorial/"&gt;Kinto.js tutorial&lt;/a&gt; you should probably take if you want to get your feet wet.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Please note that this public Kinto test server instance is flushed every morning at 7AM UTC, so don't rely on it for production useÂ ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="synchronizing-and-reconciling-data"&gt;
&lt;h2&gt;Synchronizing and reconciling data&lt;/h2&gt;
&lt;p&gt;Synchronizing local and remote data is a tough topic, and conflicts may occur quite easily if things are changing often from different sources (think multiple devices updating a same server); Kinto.js supports three distinct &lt;em&gt;synchronization strategies&lt;/em&gt; to handle such a situation:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The server is authoritative: all conflicting records are overriden locally by their version from the server;&lt;/li&gt;
&lt;li&gt;The client is authoritative: all conflicting records are resolved using their local versions, and force-pushed to the server;&lt;/li&gt;
&lt;li&gt;No party is authoritative: the synchronization flow is halted, and all conflicting records are explicitely exposed, so developers can then decide how they want resolve each of them individually.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can read more about &lt;a class="reference external" href="https://kintojs.readthedocs.org/en/latest/api/#resolving-conflicts-manually"&gt;conflict resolution&lt;/a&gt; and &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/api/#synchronization-strategies"&gt;sychronization strategies&lt;/a&gt; in the dedicated sections of the project documentation.&lt;/p&gt;
&lt;p&gt;The diagram flow below describes pretty much accurately what's happening under the hood when &lt;tt class="docutils literal"&gt;sync()&lt;/tt&gt; is called:&lt;/p&gt;
&lt;img alt="Kinto.js synchronization flow" src="http://www.servicedenuages.fr/en/../images/kintojs-sync-flow.png" style="width: 654px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="a-case-for-encryption"&gt;
&lt;h2&gt;A case for encryption&lt;/h2&gt;
&lt;p&gt;Remote data storage is certainly a topic raising concerns when it comes to security and privacy.&lt;/p&gt;
&lt;p&gt;To help addressing these issues, Kinto.js exposes a &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/api/#transformers"&gt;Remote Transformers API&lt;/a&gt;, which allow processing records before they're sent to the server and after they've been retrieved from it.&lt;/p&gt;
&lt;p&gt;This is a perfect hook for supporting end-to-end encryption, which &lt;a class="reference external" href="http://www.servicedenuages.fr/en/kinto-encryption-example"&gt;we already wrote about earlier&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-started"&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;We already mentioned the &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/tutorial/"&gt;Kinto.js tutorial&lt;/a&gt;, but there's more; we've created a rather opinionated  &lt;a class="reference external" href="https://github.com/Kinto/kinto-react-boilerplate"&gt;Kinto.js + React boilerplate&lt;/a&gt;, so you can bootstrap your next offline-first Web application in no timeÂ ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="current-limitations"&gt;
&lt;h2&gt;Current limitations&lt;/h2&gt;
&lt;p&gt;We've listed Kinto.js current limitations â€” the ones we're aware of â€” in a &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/limitations/"&gt;dedicated section of the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sure, that's a bunch of work remaining, and you're obviously &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/hacking/"&gt;invited to contribute&lt;/a&gt; if you want to help!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-future-of-kinto-js"&gt;
&lt;h2&gt;The future of Kinto.js&lt;/h2&gt;
&lt;p&gt;Of course 1.0 is a very first step towards a broader goal; foremost, we absolutely want to support bulk updates by taking advantage of IndexedDB transactions, for performance and consistency purposes.&lt;/p&gt;
&lt;p&gt;So stay tuned for next upcoming releases, and feel free to provide feedback on the &lt;a class="reference external" href="https://mail.mozilla.org/listinfo/kinto"&gt;project mailing-list&lt;/a&gt; or by &lt;a class="reference external" href="https://github.com/Kinto/kinto.js/issues/new"&gt;filing an issue on Github&lt;/a&gt;Â :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="update"&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;We're not even done polishing this blog post and the &lt;a class="reference external" href="https://github.com/Kinto/kinto.js/releases/tag/v1.1.0"&gt;1.1 version is already there&lt;/a&gt;! Take it the easy way, that means the project is on steroidsÂ ;)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Tue, 27 Oct 2015 00:00:00 +0100</pubDate><guid>tag:www.servicedenuages.fr,2015-10-27:en/kinto-js-1-0-released</guid></item><item><title>Looking for an Outreachy intern this winter</title><link>http://www.servicedenuages.fr/en/outreach-kinto-2016</link><description>&lt;blockquote class="epigraph"&gt;
&lt;p&gt;By having a program targeted specifically towards women, we found that we
reached talented and passionate participants, who were uncertain about how to
start otherwise.&lt;/p&gt;
&lt;p&gt;We are now expanding the program to people from more groups underrepresented
in FOSS. We hope this effort will help many people learn how exciting, varied
and valuable work on FOSS projects can be and how inclusive the community
really is.&lt;/p&gt;
&lt;p class="attribution"&gt;â€”&lt;a class="reference external" href="https://wiki.gnome.org/Outreachy"&gt;The GNOME Outreachy program wiki&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In our team, and at Mozilla in general, we thrive to build an inclusive
community. And we believe being more inclusive starts by reaching to the people
who are often underrepresented in tech.&lt;/p&gt;
&lt;p&gt;That's why we are participating in the GNOME Outreachy program this year by
proposing an internship around Kinto and making instances discoverable.&lt;/p&gt;
&lt;p&gt;Check out the eligibility details at the end of the article if you're
interested!&lt;/p&gt;
&lt;div class="section" id="making-kinto-instances-discoverable"&gt;
&lt;h2&gt;Making Kinto instances discoverable&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://kinto.readthedocs.org"&gt;Kinto project&lt;/a&gt; aims to bring storage
instances to everyone, attached to their
&lt;a class="reference external" href="https://accounts.firefox.com"&gt;Firefox Accounts&lt;/a&gt; (Well, it actually supports
multiple authentication schemes, but we want to promote Firefox Accounts as a
first step).&lt;/p&gt;
&lt;p&gt;Currently, Kinto is thought of as a centralised server: there is one instance, and
everyone authenticates on this instance. Items are shared between users of a
same instance.&lt;/p&gt;
&lt;p&gt;This doesn't resonate well with many of our goals: scalability is harder
when there is one endpoint, and it's also not interoperable.&lt;/p&gt;
&lt;p&gt;For instance, imagine Alice and Bob. Bob is using Mozilla's servers to store
his data, whereas Alice deployed her own Kinto instance.&lt;/p&gt;
&lt;p&gt;There are different use cases:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Alice wants to use &lt;a class="reference external" href="https://github.com/leplatrem/routina"&gt;Routina&lt;/a&gt;, an
application that stores its data inside a Kinto instance. As such, Routina
needs a way to discover where it should store its data, and send the requests
to this server.&lt;/li&gt;
&lt;li&gt;Bob and Alice want to collaborate on a set of data (think about a webapp to
manage their shared expenses). There should be a way for Alice to host
everything and grant access to Bob on her data. The webapp should be able to
use the correct server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the different steps that could allow these scenarios:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;At the moment they authenticate, the client detects the email address used,
and relies on the domain part to do a
&lt;a class="reference external" href="https://tools.ietf.org/html/rfc7033"&gt;Web Finger&lt;/a&gt; request on the domain
&lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and for the specified user.&lt;/li&gt;
&lt;li&gt;In case the identified server doesn't support WebFinger, it uses a central
repository to lookup where the Kinto server is located.&lt;/li&gt;
&lt;li&gt;Once the Kinto server is located, all requests should be issued against this
server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In terms of code changes, here is what it looks like (rough step by step). The
details are still to be fleshed out - this is a rough first version:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Update the &lt;a class="reference external" href="https://github.com/Kinto/kinto.js"&gt;Kinto.js client&lt;/a&gt; to find the
server location. It should first rely on WebFinger.&lt;/li&gt;
&lt;li&gt;Create a central repository of server locations. This could be contained in
the FxA profile server or in a central Kinto collection.&lt;/li&gt;
&lt;li&gt;Update the Kinto.js client to fall-back to this central repository in case no
Web Finger exists.&lt;/li&gt;
&lt;li&gt;Investigate on ways to store this information directly in the web browser.
It could also be configurable by the JavaScript client (with
an UX that looks like &lt;a class="reference external" href="https://remotestorage.io/"&gt;what Remote Storage proposes&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Work on the first user experience: how can client learn they can chose which
server to use?&lt;/li&gt;
&lt;li&gt;Ship it!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="want-to-join"&gt;
&lt;h2&gt;Want to join?&lt;/h2&gt;
&lt;p&gt;So, if you think that this project is exciting and you would like to join,
please check that you:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Identify as a woman (cis or trans), a trans man, or genderqueer person or you
are a resident or national of the United States of any gender who is
Black/African American, Hispanic/Latin@, American Indian, Alaska Native,
Native Hawaiian, or Pacific Islander;&lt;/li&gt;
&lt;li&gt;Are or will be 18 years of age or older by December 7, 2015;&lt;/li&gt;
&lt;li&gt;Are available for a full-time, 40 hours a week internship between
December and March.&lt;/li&gt;
&lt;li&gt;Think that open source software makes a difference, and would like to work
with us on going further with making a kick-ass Kinto ecosystem;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the eligibility details &lt;a class="reference external" href="https://wiki.gnome.org/Outreachy#Program_Details"&gt;on the section of the GNOME wiki&lt;/a&gt; and get it touch with us!&lt;/p&gt;
&lt;p&gt;If you are not sure how to get started, the best way is to start reading &lt;a class="reference external" href="https://kinto.readthedocs.org"&gt;the
documentation&lt;/a&gt;, especially
&lt;a class="reference external" href="http://kinto.readthedocs.org/en/latest/tutorials/first-steps.html"&gt;the tutorials&lt;/a&gt;
and then reach out to us by joining the
&lt;a class="reference external" href="https://mail.mozilla.org/listinfo/kinto"&gt;Kinto development mailing list&lt;/a&gt; and
the &lt;cite&gt;#storage&lt;/cite&gt; channel on irc.mozilla.org.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It is also possible to use the same mechanism to discover the FxA
endpoints. But as FxA isn't a federated protocol, users from one FxA
realm would need to be explicitely accepted by the Kinto server, in its
configuration.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-10-01:en/outreach-kinto-2016</guid></item><item><title>How to encrypt data with Kinto.js</title><link>http://www.servicedenuages.fr/en/kinto-encryption-example</link><description>&lt;p&gt;A guest post this time, by &lt;a class="reference external" href="https://michielbdejong.com/"&gt;Michiel de Jong&lt;/a&gt;
from the Firefox OS team!&lt;/p&gt;
&lt;p&gt;If you want to encrypt data that is uploaded to the cloud by an offline-first app,
it makes sense to keep the local copy of the data in-the-clear, and encrypt the
data only just before it is uploaded. That way, you can easily and efficiently display
and update the local copy of the data, without the repeated cost of encrypting
and decrypting everything all the time. Likewise, you only need to decrypt incoming data
once, when it's downloaded, and your app can then display the data as often as
needed without extra processing costs.&lt;/p&gt;
&lt;p&gt;Syncing data to and from "the cloud" is a science in itself, and
&lt;a class="reference external" href="https://github.com/Kinto/kinto.js"&gt;Kinto.js&lt;/a&gt; is a brilliant tool for this, developed
by the equally brilliant Mozilla Services team. It's nearing its 1.0 release, and you'll
hear a lot more about it on this blog in the future.&lt;/p&gt;
&lt;p&gt;It so happens that Kinto.js now supports
&lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/api/#transformers"&gt;RemoteTransformers&lt;/a&gt;,
which are superhandy for any type of transformation you may want to do on your data
before it is saved into the locally cached copy (&lt;tt class="docutils literal"&gt;RemoteTransformer#decode&lt;/tt&gt;), and before it is uploaded to the
remote server (&lt;tt class="docutils literal"&gt;RemoteTransformer#encode&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;This blogpost shows how to use a &lt;tt class="docutils literal"&gt;RemoteTransformer&lt;/tt&gt; for encrypting your data just
before it's sent to the cloud. It uses WebCrypto for the cryptography.&lt;/p&gt;
&lt;p&gt;Note that I am not a security expert and this is just an example I wrote in an afternoon, so
if you're going to copy-paste this code, please don't use it for anything
valuable without doing your own proper security review first! :) For instance, it does
not do any key stretching etcetera, it's just a very basic encrypt/decrypt
proof-of-concept.&lt;/p&gt;
&lt;p&gt;The main idea behind a &lt;tt class="docutils literal"&gt;RemoteTransformer&lt;/tt&gt; is that you provide two functions,
&lt;tt class="docutils literal"&gt;encode&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;decode&lt;/tt&gt;, and Kinto.js makes sure to call the encode function on
each record that gets uploaded, and to call the decode function on each record
that gets downloaded. You can also read about this
&lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/api/#transformers"&gt;in the Kinto.js documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The way we tell Kinto.js that we want to use our custom
&lt;tt class="docutils literal"&gt;encode&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;decode&lt;/tt&gt; procedures, is quite simple. When creating a Kinto
collection, we pass a &lt;tt class="docutils literal"&gt;RemoteTransformer&lt;/tt&gt; as a collection-level option. The full
code example is
&lt;a class="reference external" href="/scripts/kinto-encryption-example.js"&gt;here&lt;/a&gt; (note that it only works with
&lt;a class="reference external" href="/scripts/kinto-61ad959.min.js"&gt;latest Kinto.js master&lt;/a&gt;),
but let's walk through the code step-by-step.&lt;/p&gt;
&lt;p&gt;If you're unfamiliar with ES6, you may be surprised by some of this syntax; so let's
take this opportunity to get used to it! Here's a little translation:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://babeljs.io/docs/learn-es2015/#arrows-and-lexical-this"&gt;() =&amp;gt; {}&lt;/a&gt; is similar to &lt;tt class="docutils literal"&gt;(function() &lt;span class="pre"&gt;{}).bind(this)&lt;/span&gt;&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://babeljs.io/docs/learn-es2015/#let-const"&gt;const foo = 'bar'; let foo = 'bar';&lt;/a&gt; are similar to &lt;tt class="docutils literal"&gt;var foo = 'bar'&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://babeljs.io/docs/learn-es2015/#enhanced-object-literals"&gt;{ a, b }&lt;/a&gt; is similar to &lt;tt class="docutils literal"&gt;{ a: a, b: b }&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://babeljs.io/docs/learn-es2015/#template-strings"&gt;`Hello ${foo}`&lt;/a&gt; (note the backticks) is similar to &lt;tt class="docutils literal"&gt;'Hello ' + foo&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First, we need a few helper functions, which will be used later on to convert between
&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays"&gt;byte arrays&lt;/a&gt;
and ASCII strings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Helper functions:&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rawStringToByteArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;strLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;byteArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;strLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;byteArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;byteArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;base64StringToByteArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;base64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rawStringToByteArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;atob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;base64&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;byteArrayToBase64String&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byteLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we need to create a &lt;tt class="docutils literal"&gt;RemoteTransformer&lt;/tt&gt; that can encode and decode records. And for
that, we need to generate an
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;AES&lt;/a&gt; key.
&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto"&gt;WebCrypto&lt;/a&gt; is a
fairly new part of &lt;a class="reference external" href="https://platform.html5.org/"&gt;the web platform&lt;/a&gt; and it's awesome.
We will use that key to encrypt and decrypt
the data that is passed through the &lt;tt class="docutils literal"&gt;RemoteTransformer&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// RemoteTransformer:&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generateAesKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// See http://www.w3.org/TR/WebCryptoAPI/#examples-symmetric-encryption&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateKey&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'AES-GCM'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'encrypt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'decrypt'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createTransformer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aesKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cleartext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rawStringToByteArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;IV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'AES-GCM'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IV&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;aesKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;cleartext&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;byteArrayToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="nx"&gt;IV&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;byteArrayToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;IV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;base64StringToByteArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;IV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;base64StringToByteArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IV&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'AES-GCM'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IV&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;aesKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;recordArrayBuffer&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;recordArrayBuffer&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;undecryptable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;decode&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We create two Kinto instances, so that we can test syncing from one instance
to the other, via the public Kinto demo instance on AWS. Creating multiple Kinto
instances within the same origin is now possible with the recently added
&lt;tt class="docutils literal"&gt;dbPrefix&lt;/tt&gt; option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Kinto collection:&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createCollection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transformer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;testRun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;instanceNo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;kinto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Kinto&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;dbPrefix&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;testRun&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;instanceNo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'https://kinto.dev.mozaws.net/v1/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;Authorization&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Basic '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'public-demo:s3cr3t'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;kinto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;kinto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;encryption&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;testRun&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;remoteTransformers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;transformer&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;coll1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coll2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prepare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;generateAesKey&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aesKey&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;createTransformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aesKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transformer&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create two fresh empty Kinto instances for testing:&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;testRun&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;coll1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transformer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;testRun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;coll2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transformer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;testRun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's test if we can create an item in collection 1, sync it up (the data
should be encrypted on the wire, we can check that on the Network tab of the
browser console):&lt;/p&gt;
&lt;img alt="Network tab screenshot" src="http://www.servicedenuages.fr/en/../images/kinto-encryption-example-network-tab.png" style="width: 2560px; height: auto; max-width: 100%;"/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syncUp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Use first Kinto instance to demonstrate encryption:&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;coll1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'http://www.w3.org/TR/WebCryptoAPI/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Web Cryptography API'&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;coll1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncResults&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Sync up'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;syncResults&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And sync it down from the cloud again using collection 2. Again, the data
coming in on the wire should be encrypted, but the decrypted results should
show up in the sync results. And finally, a 'go()' method to put it all together.&lt;/p&gt;
&lt;p&gt;The full source code is included in a script tag on this page you're reading right
now, so go ahead and try opening your browser console on this page to try it out!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syncDown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Use second Kinto instance to demonstrate decryption:&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;coll2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncResults&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Sync down'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;syncResults&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;go&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Watch the Network tab!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncUp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncDown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Failure'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Type go(); to start!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope you are as excited about Kinto.js as I am, comments below this blogpost
and github issues on the example code very welcome! :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Wed, 16 Sep 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-09-16:en/kinto-encryption-example</guid></item><item><title>Signing collection to ensure data integrity</title><link>http://www.servicedenuages.fr/en/data-signature</link><description>&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Translated from the French by &lt;a class="reference external" href="https://twitter.com/Natim"&gt;RÃ©my Hubscher&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Within the scope of the &lt;a class="reference external" href="https://wiki.mozilla.org/Firefox/Go_Faster"&gt;Go Faster&lt;/a&gt;
project, we want to distribute Firefox updates more often than
just with major updates (which happens once every six weeks).&lt;/p&gt;
&lt;p&gt;There are multiple kinds of data that we will need to update on the client;
for example, we would like to &lt;a class="reference external" href="https://blog.mozilla.org/security/2015/03/03/revoking-intermediate-certificates-introducing-onecrl/"&gt;update the SSL Control Revocation List (named
OneCRL)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In that specific case, it is obviously very important to make sure that all the
retrieved data are coming from Mozilla and that no records are missing. We can
then be absolutely confident that nobody has attempted to invalidate a valid
certificate to the list (or remove one that has been revoked).&lt;/p&gt;
&lt;p&gt;A cryptographic signature can give us the guarantee that all the records where
fetched but it is still possible to prevent users from completely accessing the
service (the &lt;em&gt;Great Firewall of China&lt;/em&gt;, for example).&lt;/p&gt;
&lt;p&gt;This mechanism works in our specific use-case of the OneCRL update project, but
it can also be useful to any future project that needs to make sure that all
records on a collection have been correctly synced. We will probably need to
re-use it to update other parts of Firefox (or Fennec), but you may also want
to use it for your projects.&lt;/p&gt;
&lt;p&gt;We plan to use &lt;a class="reference external" href="https://kinto.readthedocs.org"&gt;Kinto&lt;/a&gt; in order to distribute
the data (or meta-data) associated with the files that need to be updated. It's
a good fit because it can be cached easily behind a CDN.&lt;/p&gt;
&lt;p&gt;That said, we don't want our users to trust either the CDN or the Kinto server
itself without checking. Somebody can attack the CDN or the Kinto server and
may add or remove records and update the CRL. If you think about it is a
horrible scenario.&lt;/p&gt;
&lt;p&gt;Consider the following work-flow:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The person responsible for updating the CRL, &lt;em&gt;the updater&lt;/em&gt;, has got a
private key (or even better &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hardware_Security_Module"&gt;an HSM&lt;/a&gt;) which
will enable them to sign a hash of the collection records.&lt;/li&gt;
&lt;li&gt;The corresponding public key ships with the client (Firefox or Fennec).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Hashing&lt;/em&gt; and &lt;em&gt;signature&lt;/em&gt; generation are done on client side to prevent certain
attacks vectors (if somebody can access the Kinto server, for example).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;em&gt;hashing&lt;/em&gt; is a one-way operation that guarantees the same result given the
same input.&lt;/p&gt;
&lt;div class="section" id="first-data-issuance-on-kinto"&gt;
&lt;h2&gt;First data issuance on Kinto&lt;/h2&gt;
&lt;p&gt;All the data are fetched from a &lt;em&gt;secure&lt;/em&gt; source and converted into a JSON
collection. Each record is assigned a unique ID generated on client side.&lt;/p&gt;
&lt;p&gt;For instance, we could have the following record:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"b7dded96-8df0-8af8-449a-8bc47f71b4c4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"fingerprint"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"11:D5:D2:0A:9A:F8:D9:FC:23:6E:5C:5C:30:EC:AF:68:F5:68:FB:A3"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the collection &lt;em&gt;hash&lt;/em&gt; is computed, signed, and then sent to the Kinto
server. (See below for details.)&lt;/p&gt;
&lt;p&gt;The signature process is deported to a specific service in a sandbox
that ensures the certificate security which is crucial in the process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-validate-data-integrity"&gt;
&lt;h2&gt;How to validate data integrity?&lt;/h2&gt;
&lt;p&gt;First, we need to fetch the collection records as well as the hash and
the signature.&lt;/p&gt;
&lt;p&gt;Then, we can validate that the hash signature is valid to make sure it
has been generated by a trusted source.&lt;/p&gt;
&lt;p&gt;Finally we can serialise our local collection and compute its hash to
make sure it matches the signed one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="update-the-collection-data"&gt;
&lt;h2&gt;Update the collection data&lt;/h2&gt;
&lt;p&gt;When you need to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete"&gt;create, read, update or delete&lt;/a&gt;
records in the collection, the client needs to make sure that the local
collection records match those of the remote server, and that they are valid.&lt;/p&gt;
&lt;p&gt;Once we are confident that the collection update is valid, the client
can compute the new collection hash and sign it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-compute-the-collection-hash"&gt;
&lt;h2&gt;How to compute the collection hash?&lt;/h2&gt;
&lt;p&gt;To compute the collection &lt;em&gt;hash&lt;/em&gt; you need a reproducible algorithm.&lt;/p&gt;
&lt;p&gt;For instance one could be:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Sort records by their ids.&lt;/li&gt;
&lt;li&gt;Serialise fields giving the value of each keys sorted by key.&lt;/li&gt;
&lt;li&gt;Compute the &lt;em&gt;hash&lt;/em&gt; of the records list serialization.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We do not yet know the exact algorithm that we will be using.&lt;/p&gt;
&lt;p&gt;An interesting candidate could be the &lt;a class="reference external" href="https://tools.ietf.org/html/draft-ietf-jose-json-web-signature-41"&gt;JSON Web Signature&lt;/a&gt;
standard. Meanwhile, a naive Python implementation could look like
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"b7dded96-8df0-8af8-449a-8bc47f71b4c4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"fingerprint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"11:D5:D2:0A:9A:F8:D9:FC:23:6E:5C:5C:30:EC:AF:68:F5:68:FB:A3"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"dded96b7-8f0d-8f8a-49a4-7f771b4c4bc4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"fingerprint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"33:6E:5C:5C:30:EC:AF:68:F5:68:FB:A3:11:D5:D2:0A:9A:F8:D9:FC"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sort_keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;collection_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a little sketch to summarise:&lt;/p&gt;
&lt;img alt="Summary schema of the collection signing flow." class="align-center" src="http://www.servicedenuages.fr/en/../images/kinto-signing.jpg" style="width: 600px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Wed, 26 Aug 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-08-26:en/data-signature</guid></item><item><title>Making the case for Cliquet?</title><link>http://www.servicedenuages.fr/en/why-cliquet</link><description>&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Translated from the French by &lt;a class="reference external" href="https://twitter.com/phrawzty"&gt;Dan Phrawzty&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;tl;dr Cliquet is a Python toolkit for building APIs that implements best
practices in terms of production use and the HTTP protocol.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="the-origins"&gt;
&lt;h2&gt;The Origins&lt;/h2&gt;
&lt;p&gt;The objective for the first trimester of 2015 was to build a service for
storage and the &lt;a class="reference external" href="http://www.servicedenuages.fr/en/../service-de-nuages"&gt;synchronisation of a reading list&lt;/a&gt;. At the outset of the project we
tried assembling all of the best practices and recommendations from different
teams and currently deployed projects. Also, we wanted to take advantage of the
&lt;em&gt;Firefox Sync&lt;/em&gt; protocol for offline sync since it's robust and proven.&lt;/p&gt;
&lt;p&gt;Rather than write &lt;a class="reference external" href="http://blog.octo.com/en/design-a-rest-api/"&gt;yet another&lt;/a&gt;
&lt;a class="reference external" href="http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api"&gt;article&lt;/a&gt;
we decided to assemble what was already out there into a more formalised
protocol.&lt;/p&gt;
&lt;p&gt;At the time we had two projects in the pipeline that obeyed more or less the
same rules, so we decided go with a common implementation of these best
practices (and resulting protocol) in the form of a re-usable toolkit.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cliquet&lt;/em&gt; was born.&lt;/p&gt;
&lt;img alt="Cliquet logo" class="align-center" src="http://www.servicedenuages.fr/en/../images/cliquet-logo.png" style="width: 300px; height: auto; max-width: 100%;"/&gt;
&lt;div class="section" id="the-intentions"&gt;
&lt;h3&gt;The Intentions&lt;/h3&gt;
&lt;blockquote class="epigraph"&gt;
What JSON structure should I use for my API? Which syntax for filtering
the querystring? How do I deal with concurrent writes? And what about
synchronising data on the client-side?&lt;/blockquote&gt;
&lt;p&gt;Today, when a new project wants to take advantage of a REST API for storing and
consuming data, it is entirely reasonable to use the stock HTTP protocol and
to concentrate only on the bare essentials. This goes for the clients as well,
since the majority of code that handles interaction with the server is
reusable.&lt;/p&gt;
&lt;blockquote class="epigraph"&gt;
How can I verify if the service is operational? How about StatsD?  Is
Sentry configured properly? How can I deploy a new version without breaking
client apps?&lt;/blockquote&gt;
&lt;p&gt;Cliquet provides everything you need to get you started in production - by
design, the transition from prototype to operational service is smooth and
rapid. Out of the box, the service will have facilities for monitoring and
configuration, as well as aides for deployment and version deprecation. As
these realities evolve in the real world, so does the toolkit.&lt;/p&gt;
&lt;blockquote class="epigraph"&gt;
Which storage backend should I use for the JSON documents? What happens if
the Ops team mandates that we use PostgreSQL? And what if we want to
switch to a Redis, or even memory-based backend, for local testing and
development?&lt;/blockquote&gt;
&lt;p&gt;One word: abstraction. This concept lies at the heart of our our entire
implementation. Those two projects mentioned previously were, at their most
simple, HTTP services that exposed a CRUD REST API backed by persistent JSON
data stores. Since neither Pyramid nor Cornice (which we'll touch on later)
were quite ready to handle this situation, we decided to introduce some classes
to abstract the rudiments of both the REST model and of storage backends in
general.&lt;/p&gt;
&lt;p&gt;An important tenet in all of our projects is that of flexibility. This means
that we try to make things optional where we can (and malleable where we
can't) - Cliquet is no different. &lt;em&gt;Everything is configurable&lt;/em&gt; right from the
&lt;tt class="docutils literal"&gt;.ini&lt;/tt&gt; file! What's more, all of the projects that use the toolkit are
deployed in exactly the same way - only the &lt;em&gt;configuration&lt;/em&gt; is different.&lt;/p&gt;
&lt;img alt="A meeting in Paris..." class="align-center" src="http://www.servicedenuages.fr/en/../images/cliquet-notes-whiteboard.jpg" style="width: 500px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-protocol"&gt;
&lt;h2&gt;The Protocol&lt;/h2&gt;
&lt;blockquote class="epigraph"&gt;
Is a REST API sufficient? Is it really necessary to re-read the HTTP spec
every time? Why are we reinventing the same protocol over and over?&lt;/blockquote&gt;
&lt;p&gt;As a group, web developers tend to spend way too much energy on reinventing
the wheel with every project, which is especially heinous since many of the
decisions are arbitrary at best. This behaviour can at least partially
explained by the sheer immensity of the HTTP specification, and all which it
contains, including header formats, CORS support, content negotiation and mime
types - not to mention trickier topics like the difference between authentication
and authorisation, and how to interpret HTTP status codes...&lt;/p&gt;
&lt;p&gt;In Cliquet, these are the principal questions we sought to answer definitively:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;REST resources&lt;/strong&gt;: The two URLs of a resource (one each for collections and
records) accept verbs and precise headers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Formats&lt;/strong&gt;: The structure of the JSON responses, as well as the &lt;a class="reference external" href="http://www.servicedenuages.fr/en/pagination-continuation-token"&gt;pagination
of lists&lt;/a&gt;, or the syntax for
filtering and sorting of resources via the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Query_string"&gt;querystring&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Timestamps&lt;/strong&gt;: A revision counter that is auto-incremented with every write
operation in a collection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Synchronisation&lt;/strong&gt;: Levers to retrieve and send changes to the data (without
loss or collision) using timestamps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt;: Specifically, user-level permissions on a collection or a
record. (&lt;em&gt;This is a work in progress&lt;/em&gt;) &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batch operations&lt;/strong&gt;: A URL that accepts a series of JSON-formatted requests
and provides the response(s).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From an operational perspective we looked at the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Version control&lt;/strong&gt;: The cohabitation of multiple versions in production
along with alerts in the headers for versions which are end-of-life.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deferred requests&lt;/strong&gt;: Client headers that can be activated during periods of
maintenance or heavy usage - the idea being to help save the server from
extraneous load.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Error channel&lt;/strong&gt;: All errors returned by the server have the same JSON
format and a specific identifier.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt;: Various URLs that expose select metadata, public settings, and
other highly monitorable information (to keep your local sysadmin happy).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Cliquet protocol is thus a compilation of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Best practices for HTTP APIs (it's what we do for a living, after all);&lt;/li&gt;
&lt;li&gt;Advice from senior system administrators whose jobs it is to maintain
services for the many millions of Firefox users;&lt;/li&gt;
&lt;li&gt;Feedback from the &lt;em&gt;Firefox Sync&lt;/em&gt; team regarding concurrency management and
"offline-first" design.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Want to know more? No problem since it's &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/api/index.html"&gt;documented in great detail&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In an ideal world this protocol would be versioned and formalised in an RFC.
Perhaps there would even be several implementations in different languages.
&lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;See our dedicated article on &lt;a class="reference external" href="http://www.servicedenuages.fr/en/handling-permissions"&gt;permissions in Cliquet&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Bear in mind that we're a very small team!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="the-toolkit"&gt;
&lt;h2&gt;The Toolkit&lt;/h2&gt;
&lt;div class="section" id="technical-choices"&gt;
&lt;h3&gt;Technical Choices&lt;/h3&gt;
&lt;p&gt;Cliquet, the protocol, is currently implemented in Python (&lt;em&gt;2.7, 3.4+, pypy&lt;/em&gt;)
with &lt;a class="reference external" href="http://trypyramid.com/"&gt;Pyramid&lt;/a&gt; &lt;a class="footnote-reference" href="#id6" id="id5"&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pyramid&lt;/strong&gt; is a web framework that is responsible for all things HTTP; it
is usable by projects of all sizes, great and small.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cornice&lt;/strong&gt; is an extension for Pyramid written by Alexis and Tarek that
consists of reusable &lt;em&gt;boilerplate&lt;/em&gt; code. The goal here is to avoid reinventing
the wheel each time when building a REST API with Pyramid. Cornice handles
the plumbing for things like HTTP verbs and methods, header validation,
content negotiation, HTTP return codes, CORS headers, JSON schema validation,
and so forth.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cliquet&lt;/strong&gt;, in turn, uses both Pyramid and Cornice to implement the protocol
and provide the necessary abstractions; both remain available for expanding
and extending from what comes in the box.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;We started with an implementation using &lt;em&gt;Python-Eve&lt;/em&gt; (Flask) but we weren't
satisified with the API configuration process - too much hand-waving and
black magic for our taste.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="concepts"&gt;
&lt;h3&gt;Concepts&lt;/h3&gt;
&lt;p&gt;Conceptually the toolkit reflects the protocol - there are some interesting
additional elements, however:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Backends&lt;/strong&gt;: Abstractions for storage, caching, and permissions (ex.
&lt;em&gt;PostgreSQL, Redis, in-memory, etc.&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: JSON-formatted logs and real-time instrumentation (StatsD)
to keep tabs on performance and health.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuration&lt;/strong&gt;: The configuration itself can be loaded from environment
variables or the &lt;tt class="docutils literal"&gt;.ini&lt;/tt&gt; file - or a combination of both.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;: Most of the components can be turned on or off (or
substituted completely) via the configuration alone.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Profiling&lt;/strong&gt;: Built-in development utilities to help find &lt;a class="reference external" href="https://en.wiktionary.org/wiki/bottleneck"&gt;bottlenecks&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Cliquet concepts" class="align-center" src="http://www.servicedenuages.fr/en/../images/cliquet-concepts.png" style="width: 500px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;By proportion, the number of lines of code that are necessary to support REST
outweighs that of any other component in Cliquet. This is a feature; Cliquet
provides a wide range of functionality and can therefore be used in any
number of contexts (even without manipulating data).&lt;/p&gt;
&lt;p&gt;The primary objective of the toolkit is aid the developer in building their
application with a minimum of fuss. You mix and match only what you need, and
every component is guaranteed to be production-ready.&lt;/p&gt;
&lt;p&gt;For example, the persistence furnished by default is &lt;em&gt;schemaless&lt;/em&gt; (e.g. JSONB)
but there's no reason a relational storage model couldn't be implemented. Since
all of the moving parts can be replaced directly via the configuration, it's
entirely feasible to extend Cliquet with business logic or other exotic
elements. We've got even more ideas in the "ecosystem" portion of &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/ecosystem.html"&gt;our
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a few weeks well be introducing the idea of "events" (or "signals")
which will allow plugins to interface in a much cleaner way.&lt;/p&gt;
&lt;p&gt;We put a high value on code &lt;em&gt;readability&lt;/em&gt;, as well as the importance of
patterns, tests, and documentation. If you have any feedback, suggestions,
accolades, or criticisms, don't hesitate to &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/issues"&gt;let us know&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="cliquet-in-action"&gt;
&lt;h2&gt;Cliquet in Action!&lt;/h2&gt;
&lt;p&gt;We wrote a &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/quickstart.html"&gt;quickstart guide&lt;/a&gt; that requires
no knowledge of &lt;em&gt;Pyramid&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples to illustrate how straightforward Cliquet can be!&lt;/p&gt;
&lt;div class="section" id="step-1"&gt;
&lt;h3&gt;Step 1&lt;/h3&gt;
&lt;p&gt;Activate Cliquet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cliquet&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyramid.config&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Configurator&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;global_config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Configurator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;cliquet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_wsgi_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here, most of the features of Cliquet are active and ready to be used.&lt;/p&gt;
&lt;p&gt;For example, the &lt;em&gt;hello&lt;/em&gt; (&lt;tt class="docutils literal"&gt;/v1/&lt;/tt&gt;) or &lt;em&gt;monitoring&lt;/em&gt; (&lt;tt class="docutils literal"&gt;/v1/__heartbeat__&lt;/tt&gt;)
URLs, but also the storage and cache backends that are available in the classic
views in either Pyramid or Cornice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2"&gt;
&lt;h3&gt;Step 2&lt;/h3&gt;
&lt;p&gt;Add some views:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;global_config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Configurator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;cliquet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"myproject.views"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_wsgi_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first step in defining a CRUD resource is to define the schema with
Colander:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cliquet&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookmarkSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResourceSchema&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@resource.register&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bookmark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BaseResource&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookmarkSchema&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here, the CRUD resource is available at &lt;tt class="docutils literal"&gt;/v1/bookmarks&lt;/tt&gt; with all the
synchronisation, filtering, sorting, paging, and timestamp features ready to
go. By default the records are private (per user).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="err"&gt;http&lt;/span&gt; &lt;span class="err"&gt;GET&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:8000/v1/bookmarks"&lt;/span&gt;
&lt;span class="err"&gt;HTTP/&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="err"&gt;OK&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://cliquet.readthedocs.org"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"cc103eb5-0c80-40ec-b6f5-dad12e7d975e"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;"last_modified"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1437034418940&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3"&gt;
&lt;h3&gt;Step 3&lt;/h3&gt;
&lt;p&gt;There's lots of room to change things up, such as the URLs and HTTP verbs, or
even modifying the fields before they're saved.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@resource.register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/user/bookmarks'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/user/bookmarks/{{id}}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="n"&gt;collection_methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bookmark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BaseResource&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookmarkSchema&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'device'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'device'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'User-Agent'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'device'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, see the &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/reference/resource.html"&gt;resource documentation&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-optional"&gt;
&lt;h3&gt;Step 4 (optional)&lt;/h3&gt;
&lt;p&gt;Let's try using Cliquet &lt;em&gt;abstractions&lt;/em&gt; in a Cornice &lt;em&gt;view&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cliquet&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Service&lt;/span&gt;

&lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"score"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/score/{game}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Store game score"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@score.post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ScoreSchema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;collection_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'scores-'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'game'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authenticated_userid&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated&lt;/span&gt;  &lt;span class="c"&gt;# c.f. Cornice.&lt;/span&gt;

    &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="feedback"&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;Have something you'd like to say? Want to get involved? Great! We love
community contributions and would be glad to help you get started.&lt;/p&gt;
&lt;div class="section" id="areas-for-improvement"&gt;
&lt;h3&gt;Areas for improvement&lt;/h3&gt;
&lt;p&gt;We're quite proud of what we've built in a relatively short time frame, and as
we noted in a &lt;a class="reference external" href="{filename/2015.07.whistler-use-cases-en.rst}"&gt;previous article&lt;/a&gt;, there's a lot of potential
just waiting to be tapped. Nonetheless, we are aware of a few areas where we
could improve things - maybe you'd like to help?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;API Documenatation&lt;/strong&gt;: Right now we don't have a good solution for a project
based on Cliquet to easily integrate all of the API documentation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation in general&lt;/strong&gt;: It's difficult to write, organise, and maintain
documentation, especially when it's aimed at a general public that runs the
gamut from absolute beginner to expert. We are victims of the "&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Curse_of_knowledge"&gt;curse of
knowledge&lt;/a&gt;".&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protocol&lt;/strong&gt;: At some point we're going to have to properly version the
protocol, which means making a division within versions of Cliquet itself;
this will be necessary if we want to move the ecosystem forward.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conservatism&lt;/strong&gt;: We're fans of stability and robustness, but we don't live
in a vacuum and must therefore sometimes bend to the realities of the real
world. Moving forward with Python 3 is a part of this (async is a good
target).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: The flip side of factoring. Occasionally we add features or
otherwise evolve the toolkit as a response to the requirements of a specific
project. As a result, we end up having to do waterfall-style project
releases.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="common-questions"&gt;
&lt;h3&gt;Common Questions&lt;/h3&gt;
&lt;div class="section" id="why-python"&gt;
&lt;h4&gt;Why Python?&lt;/h4&gt;
&lt;p&gt;The simple answer is that we like Python! Seriously though, the fact of the
matter was that our timetable was pretty tight - we didn't have time to learn a
new language.&lt;/p&gt;
&lt;p&gt;That and the fact the whole time had just spent on a year on a Node.js project
from which we needed to recover.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-not-django"&gt;
&lt;h4&gt;Why not Django?&lt;/h4&gt;
&lt;p&gt;We definitely considered it, especially given the number of fans of the &lt;em&gt;Django
REST Framework&lt;/em&gt; in the team. Ultimately we decided that the flexibility of
Pyramid's lightweight framework was a better fit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-not-an-async-framework-in-python-3"&gt;
&lt;h4&gt;Why not an async framework in Python 3?&lt;/h4&gt;
&lt;p&gt;At the time, the Mozilla Operations team supported only Python 2.7 in
production (much to our chagrin).&lt;/p&gt;
&lt;p&gt;For Reading List &lt;a class="reference external" href="https://github.com/mozilla-services/readinglist/blob/1.7.0/readinglist/__init__.py#L19-L26"&gt;we activated gevent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That said, since our only goal is to implement a well-defined protocol, we may
some day write Cliquet in &lt;em&gt;aiohttp&lt;/em&gt; or &lt;em&gt;Go&lt;/em&gt; if the opportunity presents itself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-not-json-api"&gt;
&lt;h4&gt;Why not JSON-API?&lt;/h4&gt;
&lt;p&gt;Like we mentioned in a &lt;a class="reference external" href="http://www.servicedenuages.fr/en/apidays-barcelona-retours"&gt;previous post (fr)&lt;/a&gt;, JSON-API is a specification that
touches on a lot of what we wanted - we didn't know about it when we started
with our own protocol. Since our proposition is pretty minimalist in
comparison, the idea of integrating JSON-API hasn't progressed beyond the
&lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/issues/254"&gt;discussion phase&lt;/a&gt;
yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="is-cliquet-a-rest-framework-for-pyramid"&gt;
&lt;h4&gt;Is Cliquet a REST framework for Pyramid?&lt;/h4&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;Beyond the CRUD resources classes in Cliquet (which implement a highly
specific protocol), you must use Cornice or Pyramid directly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="is-cliquet-sufficiently-generic-for-non-mozilla-projects"&gt;
&lt;h4&gt;Is Cliquet sufficiently generic for non-Mozilla projects?&lt;/h4&gt;
&lt;p&gt;Yes!&lt;/p&gt;
&lt;p&gt;It's designed from the ground up such that every component can be
turned on or off, or substituted entirely, right from the configuration file
(or from the environment).&lt;/p&gt;
&lt;p&gt;If the combination of HTTP, JSON, and CRUD resources satisfies your use case,
then Cliquet is a pretty safe bet for you new application. Combined with
a design based on production best practices and handy abstractions, Cliquet
offers a straightforward way to quickly get up and running with a Pyramid /
Cornice webapp.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-the-json-resources-support-complex-relational-models"&gt;
&lt;h4&gt;Do the JSON resources support complex relational models?&lt;/h4&gt;
&lt;p&gt;The built-in persistence layer is relatively simple and should fit almost any
use case where the data have no particular relationship; however, you could
take advantage of the full power of the protocol by using a custom Collection
class to manage these relations.&lt;/p&gt;
&lt;p&gt;As an aside, this might be a good excuse to implement the protocol within the
Django REST framework. :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="is-it-possible-to-do-xyz"&gt;
&lt;h4&gt;Is it possible to do XYZ?&lt;/h4&gt;
&lt;p&gt;We'd like to prepare a series of recipes and tutorials, but for that, we need
to collect idea from the community. Some potential ideas include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Hooks for GitHub authentication.&lt;/li&gt;
&lt;li&gt;Modifying the JSON logging format.&lt;/li&gt;
&lt;li&gt;Storing mapping (topographical, geo, etc) data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="can-cliquet-deal-with-files"&gt;
&lt;h4&gt;Can Cliquet deal with files?&lt;/h4&gt;
&lt;p&gt;No. Well, &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/issues/236"&gt;not yet&lt;/a&gt;
at least.&lt;/p&gt;
&lt;p&gt;We're holding off until we have a concrete need for this functionality at
Mozilla. Should file storage become a thing, it would likely use &lt;a class="reference external" href="http://remotestorage.io/"&gt;Remote
Storage&lt;/a&gt; in order to hook into that
growing ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="will-feature-xyz-be-implemented"&gt;
&lt;h4&gt;Will feature XYZ be implemented?&lt;/h4&gt;
&lt;p&gt;Cliquet is already quite well stocked with features. In general, rather than
implementing new functionality, we'd rather work on ensuring that the base
abstractions and extension mechanisms are robust enough to allow for a diverse
plugin-style ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Tue, 14 Jul 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-07-14:en/why-cliquet</guid></item><item><title>Summer Perspectives</title><link>http://www.servicedenuages.fr/en/summer-perspectives</link><description>&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Translated from the French by &lt;a class="reference external" href="https://dark.ca/"&gt;Dan Phrawzty&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Mozilla has a tradition of "work weeks" whereby the members of our many distributed teams get together in a single physical location a few times per year; occasionally these work weeks involve the entire company, as was the case most recently in &lt;a class="reference external" href="http://www.openstreetmap.org/node/268148288#map=4/50.12/-122.95"&gt;Whistler, BC, Canada&lt;/a&gt;.&lt;/p&gt;
&lt;img alt='"All Hands" talk about Lego, by @davidcrob - CC0' class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-talks.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;It was a great opportunity for our team to come together, to share our vision and ideas concerning data storage, and to collect use-cases for &lt;a class="reference external" href="https://kinto.readthedocs.org"&gt;Kinto&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="workshops-and-self-promotion"&gt;
&lt;h2&gt;Workshops and Self-Promotion&lt;/h2&gt;
&lt;p&gt;Nicolas presented &lt;a class="reference external" href="https://github.com/mozilla-services/kinto.js"&gt;Kinto.js&lt;/a&gt; at a dedicated workshop in Whistler, the content of which now forms a &lt;a class="reference external" href="http://kintojs.readthedocs.org/en/latest/tutorial/"&gt;introductory tutorial&lt;/a&gt;. The resulting application, simple though it appears, is a great way to learn the basic concepts behind synchronisation in Kinto. Furthermore, we didn't even need to set up a server - RÃ©my set one up that &lt;a class="reference external" href="https://kinto.dev.mozaws.net/v1/"&gt;resets itself every day&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;As an aside, we chose to use Vanilla-JS for two reasons: firstly because it allowed us to avoid the framework wars, but also because it proves that we can do so much more with HTML5 and ES6 than was possible a few years ago.&lt;/p&gt;
&lt;p&gt;Furthermore, this small workshop helped us to realise that we still have large gaps in our documentation, particularly as regards the eco-system and the long-term, global vision for our family of projects. This is an area where we have resolved to do better.&lt;/p&gt;
&lt;img alt="Kinto.js workshop - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-workshop.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="mozilla-payments"&gt;
&lt;h2&gt;Mozilla Payments&lt;/h2&gt;
&lt;p&gt;As noted in a &lt;a class="reference external" href="http://www.servicedenuages.fr/la-gestion-des-permissions"&gt;previous blog post&lt;/a&gt; we developed a permissions model which allows Kinto fulfill the the requirements of payment and subscription tracker (our fist use-case).&lt;/p&gt;
&lt;p&gt;For this project, Kinto is going to be used by a Django app via a Python client.&lt;/p&gt;
&lt;p&gt;Now that the development is done we have to deliver - that means integrating, hosting, and really pushing the usefulness of the stack. The solution is should be ready to go by the end of the year.&lt;/p&gt;
&lt;div class="section" id="coming-soon"&gt;
&lt;h3&gt;Coming Soon&lt;/h3&gt;
&lt;p&gt;Following the recent successful implementation of a permissions model, we'd like to take some time out to implement a feature that is important to us: allowing read access to &lt;em&gt;shared&lt;/em&gt; records in a collection. If this is interesting to you, feel free to follow &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/issues/354"&gt;the issue&lt;/a&gt; or (better yet) contribute a patch!&lt;/p&gt;
&lt;img alt="Whistler Alta Lake - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-lake.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="firefox-os-and-storage"&gt;
&lt;h2&gt;Firefox OS and Storage&lt;/h2&gt;
&lt;p&gt;We've collaborated frequently with the Firefox OS team over the years, notably regarding the &lt;a class="reference external" href="https://github.com/mozilla-services/msisdn-gateway"&gt;MISISDN Gateway&lt;/a&gt; (basically a way to link BrowserID and SMS together) and &lt;a class="reference external" href="https://github.com/mozilla-services/loop-server"&gt;Firefox Hello&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="in-app-sync"&gt;
&lt;h3&gt;In-App Sync&lt;/h3&gt;
&lt;p&gt;Kinto as a simple solution for synchronising data in Firefox OS? Nice! We've had this partnership in mind for some time (remember &lt;a class="reference external" href="http://daybed.readthedocs.org/"&gt;Daybed&lt;/a&gt;?), and now we've got a great opportunity at our fingertips.&lt;/p&gt;
&lt;p&gt;We'll need to clearly and plainly lay out the limitations and simplistic models inherent in our solution (notably regarding concurrency management), but we believe that it fits the use-case fairly well, so it should not disapoint. :)&lt;/p&gt;
&lt;p&gt;We're particularly motivated as both &lt;a class="reference external" href="https://github.com/daleharvey"&gt;Dale Harvey&lt;/a&gt; (one of the authors of &lt;a class="reference external" href="http://pouchdb.com/"&gt;PouchDB&lt;/a&gt;) and &lt;a class="reference external" href="https://github.com/michielbdejong"&gt;Michel de Jong&lt;/a&gt; (one of the authors of &lt;a class="reference external" href="http://remotestorage.io/"&gt;Remote Storage&lt;/a&gt;) have given us plenty of encouragement from an early stage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cut-the-rope"&gt;
&lt;h3&gt;Cut The Rope&lt;/h3&gt;
&lt;p&gt;Kinto is likely to be used to synchronise the configuration settings and scores of the very popular game &lt;a class="reference external" href="https://marketplace.firefox.com/app/cut-the-rope/"&gt;Cut The Rope&lt;/a&gt;. It'll be good to have a practical use-case on such a visible platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="syncto"&gt;
&lt;h3&gt;Syncto&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.services.mozilla.com/storage/apis-1.5.html"&gt;Firefox Sync&lt;/a&gt; is what enables synchronisation between Firefox (favourites, extensions, browser history, etc.) and many other targets in an encrypted fashion. The current Javascript client implementation is relatively complex and, frankly, somewhat dated (the proposed re-write has yet to occur).&lt;/p&gt;
&lt;p&gt;We'd like to implement a bridge between &lt;em&gt;Kinto&lt;/em&gt; and &lt;em&gt;Firefox Sync&lt;/em&gt; via &lt;em&gt;Kinto.js&lt;/em&gt; - which is more simple and more modern than the existing reference client - in order to store synced data in IndexedDB. On the server side, we feel that this shouldn't be too hard since our project is itself inspired by Sync's proven protocol model; from a client perspective, most of the work will be in plumbing crypto into BrowserID authentication.&lt;/p&gt;
&lt;p&gt;Alexis jumped at the chance to start work on a &lt;a class="reference external" href="https://github.com/mozilla-services/syncclient"&gt;Python Firefox Sync client&lt;/a&gt; which will serve as the base for any future service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cloud-storage"&gt;
&lt;h3&gt;Cloud Storage&lt;/h3&gt;
&lt;p&gt;Eden Chung and Sean Lee did a presentation on their advancements regarding the integration of remote storage services (notably DropBox and Baidu Yun) in Firefox OS. Their current proof-of-concept is based on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Filesystem_in_Userspace"&gt;FUSE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We were also thinking about introducing the idea of attachments in Kinto by implementing the &lt;a class="reference external" href="https://tools.ietf.org/html/draft-dejong-remotestorage-05"&gt;remote storage specification&lt;/a&gt;; however, for the moment our existing use-cases just aren't calling for it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Coming Soon&lt;/h3&gt;
&lt;p&gt;In addition to the work that we've already done on the server side, we're going to have to deal with concurrency management in our Javascript client in order to allow simultaneous writes and background synchronisation.&lt;/p&gt;
&lt;p&gt;We are always looking for feedback - and, of course, code contributions - on both the &lt;a class="reference external" href="https://github.com/mozilla-services/kinto/"&gt;server&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/mozilla-services/kinto.js/"&gt;client&lt;/a&gt;!&lt;/p&gt;
&lt;img alt="Firefox OS Cloud Storage Presentation - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-cloud-storage.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="firefox-application-content"&gt;
&lt;h2&gt;Firefox Application Content&lt;/h2&gt;
&lt;p&gt;The Firefox development and release process is currently based on a six-week cycle. One of the objectives is to decouple certain specific content elements (such as safety rules, dictionaries and translations, etc.) from these relatively long cycles &lt;a class="footnote-reference" href="#id4" id="id3"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The proposed solution is versioned, read-only JSON and binary blobs that can be synchronised with live browsers. There are already a number of tools to manage this sort of thing (examples include &lt;a class="reference external" href="https://wiki.mozilla.org/Balrog"&gt;Balrog&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/mozilla-services/shavar"&gt;Shavar&lt;/a&gt;), but for the moment no choice has been made. During conversations with the team in charge of this project it became evident that Kinto could be useful here too - which is motivating us even more to evolve our project!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The good news is that all the existing 3rd-party functionality will be
revived in the form of add-ons.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;img alt="Landscape - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-landscape.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="awesome-bar"&gt;
&lt;h2&gt;Awesome Bar&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;Firefox Labs&lt;/em&gt; team, best known for raising red pandas in &lt;a class="reference external" href="https://i.imgur.com/NPG7CxB.gif"&gt;test tubes&lt;/a&gt;, is interested in our solution as well, notably as regards the evolution of the &lt;a class="reference external" href="https://support.mozilla.org/en-US/kb/awesome-bar-search-firefox-bookmarks-history-tabs"&gt;Awesome Bar&lt;/a&gt; which would meld URLs, browser history, and search functions.&lt;/p&gt;
&lt;p&gt;We can't say too much right now, but the aforementioned shared collections feature in &lt;em&gt;Kinto&lt;/em&gt; would fit so very nicely into the future of the Firefox browser. :)&lt;/p&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Coming Soon&lt;/h3&gt;
&lt;p&gt;In all likelihood we will need to implement indexing and full-text searching (read: Elasticsearch) before the end of the year. This fits nicely into our roadmap since it's something that we had in Daybed already.&lt;/p&gt;
&lt;img alt="Firefox Labs Meeting - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-labs.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="browser-html"&gt;
&lt;h2&gt;Browser.html&lt;/h2&gt;
&lt;p&gt;The Search team has been exploring and extending the very notion of a platform, and is currently working on implementing a web browser in Javascript and HTML5 with &lt;a class="reference external" href="https://facebook.github.io/react/"&gt;React&lt;/a&gt;, the result of which is affectionatly known as &lt;a class="reference external" href="https://github.com/mozilla/browser.html"&gt;browser.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kinto aligns very well with the needs of that project as regards the synchronisation of user data. This could be as simple as a replication of Sync itself, but it could also be something more interesting, such as entire collections of any arbitrary data - for example, browser preferences, or an Alexa-top-500-style mechanism that would allow URL completion without the need to send a search request.&lt;/p&gt;
&lt;p&gt;But why stop with just the local browser? We could synchronise entire React states between peripherals, thus allowing a seamless browser experience across every device!&lt;/p&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;Coming Soon&lt;/h3&gt;
&lt;p&gt;If Browser.html must store navigation data, we believe that it should do so using strong encryption directly in the Javascript client. Luckily we're not the only ones thinking about this, and there are already &lt;a class="reference external" href="http://www.w3.org/TR/WebCryptoAPI/"&gt;several possible standards&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To avoid pinging the server at regular intervals in order to synchronise the changes (effectively DDoS'ing ourselves!), the introduction of &lt;a class="reference external" href="https://w3c.github.io/push-api/"&gt;push notifications&lt;/a&gt; seems like a natural choice. This would be the final building block in our quest to build a complete "Mobile / Web backed as a service".&lt;/p&gt;
&lt;img alt="Roadmap - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-roadmap.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We're in pretty much the ideal situation right now: &lt;a class="reference external" href="https://github.com/mozilla-services/kinto/wiki/Roadmap"&gt;everything&lt;/a&gt; that we've imagined, worked on, prototyped, and shipped corresponds to the needs and desires of a number of teams at Mozilla.&lt;/p&gt;
&lt;p&gt;Our challenges ahead are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Co-ordinate with the other teams efficiently.&lt;/li&gt;
&lt;li&gt;Avoid &lt;a class="reference external" href="https://i.imgur.com/jeFYGQ5.jpg"&gt;disappointment&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Maintain a high level of productivity.&lt;/li&gt;
&lt;li&gt;Continue to improve and promote our solutions.&lt;/li&gt;
&lt;li&gt;Focus on quick wins that move us forward.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, we will work to encourage meaningful community contributions to help us build a free, generic, simple, and self-hostable solution for storing data on the web.&lt;/p&gt;
&lt;img alt="Friday Night Party - CC0" class="align-center" src="http://www.servicedenuages.fr/en/../images/whistler-top-roof.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Tue, 07 Jul 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-07-07:en/summer-perspectives</guid></item><item><title>Achievement unlocked</title><link>http://www.servicedenuages.fr/en/kinto-1.0</link><description>&lt;p&gt;Today we released Cliquet 2.0 &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt; and Kinto 1.0 &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt; (a.k.a Cloud Storage).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://kinto.readthedocs.org/en/latest/"&gt;Kinto&lt;/a&gt; is a service to
store, synchronize and share arbitrary data attached to a Firefox Account.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://cliquet.readthedocs.org/en/latest/"&gt;Cliquet&lt;/a&gt; is a toolkit to
ease the implementation of HTTP micro-services, such as data-driven REST APIs
with synchronization needs.&lt;/p&gt;
&lt;p&gt;You can read more about our rationale for building this solution at
&lt;a class="reference external" href="http://www.servicedenuages.fr/eco-systeme-et-stockage-generique-en.html"&gt;http://www.servicedenuages.fr/eco-systeme-et-stockage-generique-en.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Both projects received a lot of diligence during the last months. Even
though most of the work we had done for Reading List could be
used, we rebuilt many parts and introduced some long awaited features,
like permissions management.&lt;/p&gt;
&lt;p&gt;Of course, exactly like when you refurbish a ceiling at home, we can't
resist to see loads of things that shall still be improved! Especially
about documentation and performance :)&lt;/p&gt;
&lt;p&gt;We can already foresee how the ecosystem will look like, and it's
promising. There is already a JavaScript client &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;, which aims to
synchronize browser local data with a Kinto instance.&lt;/p&gt;
&lt;p&gt;We strongly welcome any feedback, be it about the code, the
documentation or security aspects of the solution. If you wish to reach
to us, you can use the #storage channel of the Mozilla IRC network.&lt;/p&gt;
&lt;p&gt;And, this is just the beginning! Future plans are described in our road
map &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Cliquet is a toolkit to ease the implementation of HTTP
microservices, such as data-driven REST APIs â€”  &lt;a class="reference external" href="https://cliquet.readthedocs.org"&gt;https://cliquet.readthedocs.org&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Kinto is a server allowing you to store and synchronize arbitrary data,
attached to your Firefox account. â€” &lt;a class="reference external" href="https://kinto.readthedocs.org"&gt;https://kinto.readthedocs.org&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Cliquetis, the javascript library to consume the Kinto HTTP API â€”
&lt;a class="reference external" href="https://github.com/mozilla-services/cliquetis"&gt;https://github.com/mozilla-services/cliquetis&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Kinto roadmap: &lt;a class="reference external" href="https://github.com/mozilla-services/kinto/wiki/roadmap"&gt;https://github.com/mozilla-services/kinto/wiki/roadmap&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Wed, 17 Jun 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-06-17:en/kinto-1.0</guid></item><item><title>Handling permissions</title><link>http://www.servicedenuages.fr/en/handling-permissions</link><description>&lt;p&gt;When creating a generic data storage (Kinto), permissions handling is one of
the big challenges: who should get access to what, and how should we define
these rules?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tl;dr: Some feedback about the permissions vocabulary and our ideas about how
to implement permissions management in a generic data storage system&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="the-problem-at-hand"&gt;
&lt;h2&gt;The problem at hand&lt;/h2&gt;
&lt;p&gt;The problem we're facing is simple: data is stored online and we need a way to
share this data with other people.&lt;/p&gt;
&lt;p&gt;Looking at the use cases, it's possible to split our users in two categories:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;End users (you);&lt;/li&gt;
&lt;li&gt;Applications which interact on their behalf.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Different parties don't have the same rights: some should be able to read,
others should write, yet another should be able to create new records, and all
this permission handling should be fine-grained: it should be possible to read
one record but not the other, for instance.&lt;/p&gt;
&lt;p&gt;We started from the fact that no available solution was offering an appealing
solution to these needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-vocabulary-problem"&gt;
&lt;h2&gt;A vocabulary problem&lt;/h2&gt;
&lt;p&gt;The principal problem that got in our way during our thinking was the
vocabulary.&lt;/p&gt;
&lt;div class="section" id="principals"&gt;
&lt;h3&gt;Principals&lt;/h3&gt;
&lt;p&gt;A &lt;em&gt;principal&lt;/em&gt;, is an entity that can be authenticated by a computer system.
It is the actor who does the action. &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It could either be someone, a computer, a service or a group of any of such
things. This is conceptually wider than the classical "user id*".&lt;/p&gt;
&lt;p&gt;Permissions are then associated to these &lt;em&gt;principals&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;For instance, a user is identified in an unique way when he connects to the
authentication system, which role is to define a list of &lt;em&gt;principals&lt;/em&gt; for the
authenticating user.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;To read more about &lt;em&gt;principals&lt;/em&gt; :
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Principal_%28computer_security%29"&gt;https://en.wikipedia.org/wiki/Principal_%28computer_security%29&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="the-difference-between-a-role-and-a-group"&gt;
&lt;h3&gt;The difference between a role and a group&lt;/h3&gt;
&lt;p&gt;From scratch, it's not easy to precisely define the difference between these two
concepts which allow to associate permissions to a group of &lt;em&gt;principals&lt;/em&gt;. &lt;a class="footnote-reference" href="#id4" id="id3"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The difference is mainly semantic, but we can see a difference in the "direction"
of the relationship between these two concepts.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A role is a list of permissions associated to a &lt;em&gt;principal&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;A group is a list of &lt;em&gt;principals&lt;/em&gt; we can associate to a permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;More information at:
&lt;a class="reference external" href="http://stackoverflow.com/questions/7770728/group-vs-role-any-real-difference"&gt;http://stackoverflow.com/questions/7770728/group-vs-role-any-real-difference&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="the-difference-between-permission-acl-and-ace"&gt;
&lt;h3&gt;The difference between permission, ACL and ACE&lt;/h3&gt;
&lt;blockquote class="epigraph"&gt;
&lt;p&gt;An ACL is a list of Access Control Entry (ACE) enabling or disabling
acces rights to a person or a group.&lt;/p&gt;
&lt;p class="attribution"&gt;â€”&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Access_Control_List"&gt;https://en.wikipedia.org/wiki/Access_Control_List&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would even say, in our case, "to a &lt;em&gt;principal&lt;/em&gt;". For instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;create_record: alexis,remy,tarek
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ACE gives the &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; permission on the &lt;tt class="docutils literal"&gt;record&lt;/tt&gt; object to the users
Tarek, RÃ©my and Alexis.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="permissions-delegation"&gt;
&lt;h2&gt;Permissions delegation&lt;/h2&gt;
&lt;p&gt;Imagine the following example, where Alice stores two types of data online:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a list of contacts ;&lt;/li&gt;
&lt;li&gt;a list of tasks, which can be associated to her contacts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alice has all the rights on its data.&lt;/p&gt;
&lt;p&gt;However, she's using two applications which should have a restricted access:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One application to handle contacts, to which she wants to delegate the entire
management: &lt;tt class="docutils literal"&gt;contacts:write&lt;/tt&gt; ;&lt;/li&gt;
&lt;li&gt;Another application to handle the tasks, to which she wants to delegate the
management of the tasks, and the reading of the contacts: &lt;tt class="docutils literal"&gt;contacts:read
tasks:write&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;She wants to prevent her contacts application to access the tasks and the tasks
app should not be able to update existing contacts, just eventually creating
new ones.&lt;/p&gt;
&lt;p&gt;She then needs a way to delegate some of her permissions to a third party (the
app).&lt;/p&gt;
&lt;p&gt;That's precisely the role of &lt;a class="reference external" href="http://tools.ietf.org/html/rfc6749#page-23"&gt;OAuth2 scopes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the connection of a user, a window will ask her which access she wants
to give to the application that will act on her behalf.&lt;/p&gt;
&lt;p&gt;The service will then have access to these &lt;em&gt;scopes&lt;/em&gt; by looking at the
used authentication token. This information should be considered as a user
input (that is, we cannot trust it). It is what the user &lt;em&gt;wants&lt;/em&gt;, not what the
user &lt;em&gt;should have access to&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It's possible that the user don't have access to the requested data. The
service should use two levels of permissions: the user ones, and the ones that
were delegated to the application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="namespaces"&gt;
&lt;h2&gt;Namespaces&lt;/h2&gt;
&lt;p&gt;In our initial implementation of &lt;em&gt;Kinto&lt;/em&gt; (our generic data storage service),
the &lt;em&gt;namespace&lt;/em&gt; was implicit: stored data was necessarily tied to the connected
user.&lt;/p&gt;
&lt;p&gt;User data were then impossible to share.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Namespaces&lt;/em&gt; are a simple way to handle the data sharing problem.&lt;/p&gt;
&lt;p&gt;We chose to re-use the GitHub and BitBucket mode, which uses "organisations" as
&lt;em&gt;namespaces&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In our case, it's possible to create "buckets", which are one of these
&lt;em&gt;namespaces&lt;/em&gt;. A bucket is a container for collections and user groups.&lt;/p&gt;
&lt;p&gt;ACLs on these collections can be given to certain groups of the bucket, and
directly to other &lt;em&gt;principals&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="our-api-proposal"&gt;
&lt;h2&gt;Our API proposal&lt;/h2&gt;
&lt;div class="section" id="manipulated-objects"&gt;
&lt;h3&gt;Manipulated objects&lt;/h3&gt;
&lt;p&gt;To handle permissions, we identified the following objects:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="23%"&gt;&lt;/col&gt;
&lt;col width="77%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;bucket&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;We can see them as &lt;em&gt;namespaces&lt;/em&gt;. They allow to have
different collections having the same name but stored
in different &lt;em&gt;buckets&lt;/em&gt; so that data are distinct.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;collection&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A list of records.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;record&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A record from a collection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;group&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A group of principals&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To define ACLs, there is a hierarchy: objects inherit the ACLs from their
parents.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;           +---------------+
           | Bucket        |
           +---------------+
    +-----&amp;gt;+ - id          +&amp;lt;---+
    |      | - permissions |    |
    |      +---------------+    |
    |                           |
    |                           |
    |                           |
    |                           |
    |                           |
+---+-----------+        +------+---------+
| Collection    |        | Group          |
+---------------+        +----------------+
| - id          |        |  - id          |
| - permissions |        |  - members     |
+------+--------+        |  - permissions |
       ^                 +----------------+
       |
       |
+------+---------+
| Record         |
+----------------+
|  - id          |
|  - data        |
|  - permissions |
+----------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="permissions"&gt;
&lt;h3&gt;Permissions&lt;/h3&gt;
&lt;p&gt;For all of these objects, we identified the following permissions:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="23%"&gt;&lt;/col&gt;
&lt;col width="77%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Permission&lt;/th&gt;
&lt;th class="head"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;read&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The permission to read the content of
the object and all its children.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;write&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The permission to modify and
administration an object and all its
children objects. The &lt;em&gt;write&lt;/em&gt;
permission allows reading, modification
and deletion of objects, and the
handling of permissions on this object.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;create&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The permission to create the specified
child object. For instance:
&lt;tt class="docutils literal"&gt;collections:create&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To each specified permission on an object is associated a list of &lt;em&gt;principals&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;For the &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; permission, we are forced to specify which child the
permission applies to since an object can have different kind of child nodes.
For instance: &lt;tt class="docutils literal"&gt;collections:create&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;groups:create&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;We don't have a &lt;cite&gt;delete&lt;/cite&gt; and &lt;cite&gt;update&lt;/cite&gt; permission so far, because we don't have
any use case which needs them. Whoever with the &lt;tt class="docutils literal"&gt;write&lt;/tt&gt; permission can also
delete a record.&lt;/p&gt;
&lt;p&gt;Permissions from an object are inherited from its parent. For instance,
a record created in a collection available to anyone will also be available to
anyone.&lt;/p&gt;
&lt;p&gt;Said differently, it's not possible that an object has a more restrictive
permission that its parent.&lt;/p&gt;
&lt;p&gt;Here is a complete list of permissions:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="21%"&gt;&lt;/col&gt;
&lt;col width="32%"&gt;&lt;/col&gt;
&lt;col width="47%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Associated permissions&lt;/th&gt;
&lt;th class="head"&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Configuration
(.ini)&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;buckets:create&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Principals&lt;/em&gt; who can create
a bucket are defined in the
service configuration (for
instance "authenticated users")&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;&lt;tt class="docutils literal"&gt;bucket&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;write&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;The "admin" permission for the
&lt;em&gt;bucket&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;read&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;The permission to read all the
content of all objects in the
&lt;em&gt;bucket&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;collections:create&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to create
collections in the &lt;em&gt;bucket&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;groups:create&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to create groups
in the &lt;em&gt;bucket&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;&lt;tt class="docutils literal"&gt;collection&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;write&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to administrate all
objects in the collection.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;read&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to consult all
objects in the collection.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;records:create&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to create new
records in the collection.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;record&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;write&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to modify or share
the record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;read&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to read the record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;group&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;write&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to administrate the
group.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;cite&gt;read&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;Permission to know the members of
the group.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;em&gt;principals&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Actors connecting to the storage service can authenticate themselves.&lt;/p&gt;
&lt;p&gt;They then receive a list of &lt;em&gt;principals&lt;/em&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;: the &lt;em&gt;principal&lt;/em&gt; given to all actors (authenticated or not);&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;: the &lt;em&gt;principal&lt;/em&gt; given to all authenticated actors;&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;principal&lt;/em&gt; identifying the actor, for instance &lt;tt class="docutils literal"&gt;fxa:32aa95a474c984d41d395e2d0b614aa2&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to avoid identifiers collisions, the actor &lt;em&gt;principal&lt;/em&gt; is built from
the authentication type used (&lt;tt class="docutils literal"&gt;system&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;basic&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ipaddr&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;hawk&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;fxa&lt;/tt&gt;) and the identifier.&lt;/p&gt;
&lt;p&gt;Depending the &lt;em&gt;bucket&lt;/em&gt; on which the action is taking place, the groups the user
is a member of are also added to her list of principals (e.g.
&lt;tt class="docutils literal"&gt;group:moderators&lt;/tt&gt;)&lt;/p&gt;
&lt;p&gt;So, if Bob connects with his &lt;em&gt;Firefox Account&lt;/em&gt; on the &lt;tt class="docutils literal"&gt;servicedenuages_blog&lt;/tt&gt;
bucket, on which he is a member of the &lt;tt class="docutils literal"&gt;moderators&lt;/tt&gt; group, he would have the
following list of principals:
&lt;tt class="docutils literal"&gt;Everyone, Authenticated, fxa:32aa95a474c984d41d395e2d0b614aa2, group:moderators&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;It's then possible to assign a permission to Bob by using one of these
&lt;em&gt;principals&lt;/em&gt;.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The &lt;tt class="docutils literal"&gt;&amp;lt;userid&amp;gt;&lt;/tt&gt; &lt;strong&gt;principal&lt;/strong&gt; depends on the authentication &lt;em&gt;back-end&lt;/em&gt; used (e.g.
&lt;tt class="docutils literal"&gt;github:leplatrem&lt;/tt&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="a-few-examples"&gt;
&lt;h3&gt;A few examples&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="35%"&gt;&lt;/col&gt;
&lt;col width="18%"&gt;&lt;/col&gt;
&lt;col width="46%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Permissions&lt;/th&gt;
&lt;th class="head"&gt;Principals&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;bucket:blog&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;blog&lt;/span&gt; owner id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;collection:articles&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;group:moderators&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;read&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;record:569e28r98889&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;co-author&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="35%"&gt;&lt;/col&gt;
&lt;col width="18%"&gt;&lt;/col&gt;
&lt;col width="46%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Permissions&lt;/th&gt;
&lt;th class="head"&gt;Principals&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;bucket:wiki&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;wiki&lt;/span&gt; administrator id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;collection:articles&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;read&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Polls&lt;/strong&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="34%"&gt;&lt;/col&gt;
&lt;col width="31%"&gt;&lt;/col&gt;
&lt;col width="35%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Permissions&lt;/th&gt;
&lt;th class="head"&gt;Principals&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;bucket:poll&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;admin&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;collection:create&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;collection:&amp;lt;poll&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;poll&lt;/span&gt; author id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;record:create&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Collaborative maps&lt;/strong&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="34%"&gt;&lt;/col&gt;
&lt;col width="31%"&gt;&lt;/col&gt;
&lt;col width="35%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Permissions&lt;/th&gt;
&lt;th class="head"&gt;Principals&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;bucket:maps&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;admin&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;collection:create&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;collection:&amp;lt;map&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;map&lt;/span&gt; author id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;read&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;record:&amp;lt;record&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;maintainer&lt;/span&gt; id&amp;gt;&lt;/tt&gt;
(&lt;em&gt;ex. event staff member
maintaining venues&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Of course, there are many ways to modelize common use cases. For instance, it's
possible to imagine a wiki platform (ala wikia.com) where wikis are private by
default and some pages can be published:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="32%"&gt;&lt;/col&gt;
&lt;col width="30%"&gt;&lt;/col&gt;
&lt;col width="38%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Object&lt;/th&gt;
&lt;th class="head"&gt;Permissions&lt;/th&gt;
&lt;th class="head"&gt;Principals&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;&lt;tt class="docutils literal"&gt;bucket:freewiki&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;administrator&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;collection:create&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;group:create&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Authenticated&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="2"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;collection:&amp;lt;wiki&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;write&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;fxa:&amp;lt;wiki&lt;/span&gt; owner id&amp;gt;&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;group:&amp;lt;editors&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;read&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;group:&amp;lt;readers&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;record:&amp;lt;page&lt;/span&gt; id&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;read&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;Everyone&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="the-http-api"&gt;
&lt;h3&gt;The HTTP API&lt;/h3&gt;
&lt;p&gt;During the creation of an object, the user is given the &lt;tt class="docutils literal"&gt;write&lt;/tt&gt; permission on
the object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;PUT&lt;/span&gt; &lt;span class="nn"&gt;/v1/buckets/servicedenuages_blog&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Bearer 0b9c2625dc21ef05f6ad4ddf47c5f203837aa32ca42fced54c2625dc21efac32&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;

HTTP/1.1 201 Created
Content-Type: application/json; charset=utf-8

{
    "id": "servicedenuages_blog",
    "permissions": {
        "write": ["fxa:49d02d55ad10973b7b9d0dc9eba7fdf0"]
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's possible to add permissions using the &lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; HTTP method.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;PATCH&lt;/span&gt; &lt;span class="nn"&gt;/v1/buckets/servicedenuages_blog/collections/articles&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Bearer 0b9c2625dc21ef05f6ad4ddf47c5f203837aa32ca42fced54c2625dc21efac32&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;

{
    "permissions": {
        "read": ["+system.Everyone"]
    }
}

HTTP/1.1 201 Created
Content-Type: application/json; charset=utf-8

{
    "id": "servicedenuages_blog",
    "permissions": {
        "write": ["fxa:49d02d55ad10973b7b9d0dc9eba7fdf0"],
        "read": ["system.Everyone"]
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For &lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt;, we are thinking about using a syntax prefixed with a &lt;tt class="docutils literal"&gt;+&lt;/tt&gt; or
a &lt;tt class="docutils literal"&gt;-&lt;/tt&gt; to add or remove &lt;em&gt;principals&lt;/em&gt; on an ACL.&lt;/p&gt;
&lt;p&gt;It is also possible to do a &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; to reset the ACLs, knowing that the &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt;
will then add the current user to the list. It's possible to use a &lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; to
remove herself from the list. Adding the current user allows to avoid
situations where nobody has access to the data anymore.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; permission is used for a &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; but also for a &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt;
when the record doesn't exist.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-specific-case-of-user-data"&gt;
&lt;h3&gt;The specific case of user data&lt;/h3&gt;
&lt;p&gt;One of the current feature of &lt;em&gt;Kinto&lt;/em&gt; is to handle record collections by user.&lt;/p&gt;
&lt;p&gt;On &lt;em&gt;*nix&lt;/em&gt; systems, it's possible, for an application, to save configuration
for the current user in her personal folder, without bothering about its
specific location, using &lt;tt class="docutils literal"&gt;~&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In our case, if an application want to save contacts for a user, it can use
a shortcut to reference the &lt;em&gt;personal&lt;/em&gt; bucket of the user:
&lt;tt class="docutils literal"&gt;/buckets/personal/collections/contacts&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This URL will return a &lt;tt class="docutils literal"&gt;HTTP 307&lt;/tt&gt; to the current user &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/v1/buckets/personal/collections/contacts/records&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;

{
   "name": "RÃ©my",
   "emails": ["remy@example.com"],
   "phones": ["+330820800800"]
}

HTTP/1.1 307 Temporary Redirect
Location: /v1/buckets/fxa:49d02d55ad10973b7b9d0dc9eba7fdf0/collections/contacts/records
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like so, it's possible for Alice to share her contacts with Bob. She just have
to give the &lt;tt class="docutils literal"&gt;read&lt;/tt&gt; permission to Bob on her collection and give him the
complete URL:
&lt;tt class="docutils literal"&gt;/v1/buckets/fxa:49d02d55ad10973b7b9d0dc9eba7fdf0/collections/contacts/records&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Permissions delegation&lt;/h3&gt;
&lt;p&gt;In &lt;em&gt;Kinto&lt;/em&gt;, we defined a format to restrict permissions using OAuth2 scopes:
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;storage:&amp;lt;bucket_id&amp;gt;:&amp;lt;collection_id&amp;gt;:&amp;lt;permissions_list&amp;gt;&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Taking back the previous &lt;em&gt;tasks&lt;/em&gt; example, it is possible for Bob to create
a specific OAuth2 token with the following &lt;em&gt;scopes&lt;/em&gt;:
&lt;tt class="docutils literal"&gt;profile storage:todolist:tasks:write storage:personal:contacts:read+records:create&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Like so, even if Bob has the &lt;tt class="docutils literal"&gt;write&lt;/tt&gt; permission on his contacts, the
application using this token will only be able to read the existing contacts
and add new ones.&lt;/p&gt;
&lt;p&gt;One part of the complexity is to manage presenting these &lt;em&gt;scopes&lt;/em&gt; in a readable
way to the user, so she or he is able to chose which permissions to give to the
applications acting on her behalf.&lt;/p&gt;
&lt;p&gt;So, here is where we're at with our thinking!&lt;/p&gt;
&lt;p&gt;If you have things to add or discuss with this proposal, don't hesitate to
interrupt us while it's still possible!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Tue, 12 May 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-05-12:en/handling-permissions</guid></item><item><title>Ecosystem &amp; generic storage</title><link>http://www.servicedenuages.fr/en/generic-storage-ecosystem</link><description>&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This article was translated from French by Julien/Sphinx. We thank him a lot
for this effort! Note, that at the beginning of this year,
&lt;a class="reference external" href="https://medium.com/@Sphinx/mdn-pr%C3%A9sentation-de-la-documentation-javascript-70541cecae54"&gt;he also translated MDN to French&lt;/a&gt;!
&lt;strong&gt;Big up !&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;tl;dr We have to build a service to track payments, and we're hesitant
to go on with our own solution for storage and synchronization.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As we wrote in &lt;a class="reference external" href="http://www.servicedenuages.fr/en/../service-de-nuages"&gt;the previous article (FR)&lt;/a&gt;,
we want to build a solution for generic data storage. We reboot &lt;a class="reference external" href="http://daybed.readthedocs.org"&gt;Daybed&lt;/a&gt;
at Mozilla !&lt;/p&gt;
&lt;p&gt;Our goal is simple: allow developers, whether they are from Mozilla or from the whole world,
to easily synchronize and save data associated to a user.&lt;/p&gt;
&lt;p id="storage-specs"&gt;Here are the aspects of the architecture that seem essential to us:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The solution must rely on a protocol, not on a particular implementation;&lt;/li&gt;
&lt;li&gt;Self-hosting of the whole solution must be dead simple;&lt;/li&gt;
&lt;li&gt;Authentication must be pluggable or decentralized (OAuth2, FxA, Persona);&lt;/li&gt;
&lt;li&gt;The server should be able to validate records;&lt;/li&gt;
&lt;li&gt;An authorization/permissions system must allow collection protection or
fine-grained records sharing;&lt;/li&gt;
&lt;li&gt;Conflicts resolution could happen server-side;&lt;/li&gt;
&lt;li&gt;Clients should be Â«&lt;em&gt;offline-first&lt;/em&gt;Â»;&lt;/li&gt;
&lt;li&gt;Clients should be able to easily merge/reconciliate data;&lt;/li&gt;
&lt;li&gt;Clients should be usable in the browser &lt;em&gt;and&lt;/em&gt; server-side;&lt;/li&gt;
&lt;li&gt;Every component should be simple and easily substituable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first question we were asked was: Â«&lt;em&gt;Why don't you rather use PouchDB or Remote Storage?&lt;/em&gt;Â»&lt;/p&gt;
&lt;div class="section" id="remote-storage"&gt;
&lt;h2&gt;Remote Storage&lt;/h2&gt;
&lt;p&gt;Remote Storage is an open standard for user storage. &lt;a class="reference external" href="http://tools.ietf.org/html/draft-dejong-remotestorage-04"&gt;The specification&lt;/a&gt;
is based on existing and proven standards: Webfinger, OAuth2, CORS and REST.&lt;/p&gt;
&lt;p&gt;The API is pretty simple and &lt;a class="reference external" href="http://blog.cozycloud.cc/news/2014/08/12/when-unhosted-meets-cozy-cloud/"&gt;prestigious projects are using it&lt;/a&gt;.
There exist several &lt;a class="reference external" href="https://github.com/jcoglan/restore"&gt;server implementations&lt;/a&gt;
and there is even a &lt;a class="reference external" href="https://www.npmjs.com/package/remotestorage-server"&gt;Node squeleton&lt;/a&gt;
to build a custom server.&lt;/p&gt;
&lt;img alt="Remote Storage widget" class="align-left" src="http://www.servicedenuages.fr/en/../images/remotestorage-widget.png" style="width: 243px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/remotestorage/remotestorage.js/"&gt;remoteStorage.js client&lt;/a&gt;
makes possible the integration of this solution in Web apps. This client is in charge of the Â«local storeÂ»,
caching, syncing and gives users a widget so that they can choose the server
which will receive the data (using Webfinger).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/michielbdejong/ludbud"&gt;ludbud&lt;/a&gt;, a refined version of
&lt;em&gt;remoteStorage.js&lt;/em&gt; limits itself to the abstraction of the remote data storage.
At the end, it would be possible to have a single library and to store data
in either a &lt;em&gt;Remote Storage&lt;/em&gt; server, an &lt;em&gt;ownCloud&lt;/em&gt; server, or even on the bad guys'
like &lt;em&gt;Google Drive&lt;/em&gt; or &lt;em&gt;Dropbox&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;At first sight, the specification seemed to fit with what we want to do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The philosophy of the protocol is sound;&lt;/li&gt;
&lt;li&gt;The ecosystem is well-thought;&lt;/li&gt;
&lt;li&gt;The political vision fits: give back the control of the data to the users
(see &lt;a class="reference external" href="http://unhosted.org/"&gt;unhosted&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Technical choices are compatible with what we've already started (CORS, REST, OAuth2);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, regarding data manipulation, there are several differences with what we want to do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The API seems Â«filesÂ» oriented (folders and documents) and not Â«dataÂ» (collections and records);&lt;/li&gt;
&lt;li&gt;There is no record validation following some schema (though &lt;a class="reference external" href="https://remotestorage.io/doc/code/files/baseclient/types-js.html"&gt;some implementations&lt;/a&gt; of the protocol are actually doing this);&lt;/li&gt;
&lt;li&gt;There is no option to sort/filter records with regards to their attributes;&lt;/li&gt;
&lt;li&gt;The permission system &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/unhosted/5_NOGq8BPTo"&gt;is limited to private/public&lt;/a&gt; (and
&lt;a class="reference external" href="https://github.com/remotestorage/spec/issues/58#issue-27249452"&gt;the author is going for a git-like model&lt;/a&gt;) &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To summarize, it would seem that what we want to achieve with the storage of
records is complementary to &lt;em&gt;Remote Storage&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If there are some needs about Â«file orientedÂ» persistence, it would be dull to
reinvent this solution. So there is a great chance that we will integrate
&lt;em&gt;Remote Storage&lt;/em&gt; some day and that it will become a facet of our solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pouchdb"&gt;
&lt;h2&gt;PouchDB&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pouchdb.com/"&gt;PouchDB&lt;/a&gt; is a Javascript library allowing to manipulate
records locally and synchronize them to a distant database.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PouchDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dbname'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dave@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'David'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://example.com/mydb'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The project sees some traction and benefits from a lot of contributors. The
ecosystem is rich and adoption by projects &lt;a class="reference external" href="https://github.com/hoodiehq/wip-hoodie-store-on-pouchdb"&gt;such as Hoodie&lt;/a&gt; confirms the tool
pertinence for frontend developers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PouchDB&lt;/em&gt; handles a local Â« store Â» which persistence is abstract and
&lt;a class="reference external" href="http://pouchdb.com/2014/07/25/pouchdb-levels-up.html"&gt;is built on top&lt;/a&gt;
of the &lt;a class="reference external" href="https://github.com/level/levelup#relationship-to-leveldown"&gt;LevelDown API&lt;/a&gt;
to persist data in &lt;a class="reference external" href="https://github.com/Level/levelup/wiki/Modules#storage-back-ends"&gt;any backend&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even if &lt;em&gt;PouchDB&lt;/em&gt; is mainly done for Â«&lt;em&gt;offline-first&lt;/em&gt;Â» applications, it
can be used inside browsers and on the server side, via Node.&lt;/p&gt;
&lt;div class="section" id="synchronization"&gt;
&lt;h3&gt;Synchronization&lt;/h3&gt;
&lt;p&gt;Local data synchronization (or replication) is done on a remote
&lt;a class="reference external" href="http://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb-server"&gt;PouchDB Server&lt;/a&gt; project
implements the CouchDB API in NodeJS. Because &lt;em&gt;PouchDB&lt;/em&gt; itself is used, we
obtain a service which is behaving like a &lt;em&gt;CouchDB&lt;/em&gt;, but stores data
anywhere (in a &lt;em&gt;Redis&lt;/em&gt; or a &lt;em&gt;PostgreSQL&lt;/em&gt; database for instance).&lt;/p&gt;
&lt;p&gt;The synchronisation is complete. In other words, all records that are on
the server will end up being synchronised with the client. It is possible to filter
synchronized collections but &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;its purpose is not to secure data access&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to do so, it is recommanded to create &lt;a class="reference external" href="https://github.com/nolanlawson/pouchdb-authentication#some-people-can-read-some-docs-some-people-can-write-those-same-docs"&gt;a database per user&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This isn't necessarily a problem since CouchDB &lt;a class="reference external" href="https://mail-archives.apache.org/mod_mbox/couchdb-user/201401.mbox/%3C52CEB873.7080404@ironicdesign.com%3E"&gt;can handle hundreds of thousands
of databases without any problem&lt;/a&gt;.
However, depending on use cases, clustering and isolation (by role, application,
collection, ...) might not be dealt with easily.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-payments-use-case"&gt;
&lt;h2&gt;The Â« Payments Â» use case&lt;/h2&gt;
&lt;img alt="Put Payments Here  -- Before the Internet - CC-NC-SA Katy Silberger https://www.flickr.com/photos/katysilbs/11163812186" src="http://www.servicedenuages.fr/en/../images/put-payments.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;During the next weeks, we will have to setup a prototype that keeps an history
of a user's payments and subscriptions.&lt;/p&gt;
&lt;p&gt;The requirements are simple:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Â« Payment Â» application tracks payments and subscriptions of a user
for a given application;&lt;/li&gt;
&lt;li&gt;The Â« Data Â» application requests the service to check if a user paid or
has suscribed;&lt;/li&gt;
&lt;li&gt;The user requests the service to get a list of all payments/subscriptions
reltated to her.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Â« Payment Â» application only should have the right to create/modify/delete
records. The two others can only have read-only access to these records.&lt;/p&gt;
&lt;p&gt;A given application cannot access to some other application payments and a given user cannot access to some other user's payments.&lt;/p&gt;
&lt;div class="section" id="with-remotestorage"&gt;
&lt;h3&gt;With RemoteStorage&lt;/h3&gt;
&lt;img alt="Remote Love - CC-BY-NC Julie https://www.flickr.com/photos/mamajulie2008/2609549461" class="align-center" src="http://www.servicedenuages.fr/en/../images/remote-love.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;The idea of &lt;em&gt;Remote Storage&lt;/em&gt; is to separate the application from the data that
the user created with the application.&lt;/p&gt;
&lt;p&gt;In our use case, the Â« Payment Â» app is dealing with the data concerning a user.
However, this data does not directly belong to the user. A user should be able
to delete some records but he/she cannot create or edit some existing payments!&lt;/p&gt;
&lt;p&gt;The concept of permissions, limited to private/public is not suitable here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="with-pouchdb"&gt;
&lt;h3&gt;With PouchDB&lt;/h3&gt;
&lt;p&gt;It will be necessary to create a &lt;em&gt;database&lt;/em&gt; per user in order to separate the
records in a secure way. Only the Â« Payment Â» app will be granted full rights
on the different databases.&lt;/p&gt;
&lt;p&gt;But this won't be enough.&lt;/p&gt;
&lt;p&gt;An app must not see payments from another application so it would also be
necessary to create a database per application.&lt;/p&gt;
&lt;p&gt;When a user will need to access payments, it will be mandatory to join every
&lt;em&gt;database&lt;/em&gt; of every application for this current user. When the marketing
department will want to build stats for all apps, one will have to join hundreds
of thousands of databases.&lt;/p&gt;
&lt;p&gt;This doesn't seem appropriate: most of the time, there are only few
payments/subscriptions for a given user. Should we have hundreds of thousands of
databases, each of which will have less than 5 records?&lt;/p&gt;
&lt;p&gt;Moreover, the server side of Â« Payment Â» is implemented with Python, using a
JavaScript wrapper (as &lt;a class="reference external" href="https://pythonhosted.org/Python-PouchDB/"&gt;python-pouchdb&lt;/a&gt;) is not something we thrive for.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="a-new-ecosystem"&gt;
&lt;h2&gt;A new ecosystem?&lt;/h2&gt;
&lt;img alt="Wagon wheel - CC-BY-NC-SA arbyreed https://www.flickr.com/photos/19779889@N00/16161808220" src="http://www.servicedenuages.fr/en/../images/wagon-wheel.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;It is obvious that &lt;em&gt;PouchDB&lt;/em&gt; and &lt;em&gt;Remote Storage&lt;/em&gt; are rich projects with dynamic communities. Therefore, it's reasonable to wonder if one should develop another solution.&lt;/p&gt;
&lt;p&gt;When we created the &lt;em&gt;Reading List&lt;/em&gt; server, we built it with
&lt;a class="reference external" href="http://cliquet.readthedocs.org/"&gt;Cliquet&lt;/a&gt;. We had a chance to setup &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/api/"&gt;a very simple protocol&lt;/a&gt;, strongly inspired by
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Firefox_Sync"&gt;Firefox Sync&lt;/a&gt;, to sync records.&lt;/p&gt;
&lt;p&gt;The reason clients for &lt;em&gt;Reading List&lt;/em&gt; were implemented in few weeks, whether in
JavaScript, Java (Android) or ASM (Firefox addon), is that the Â«&lt;em&gt;offline first&lt;/em&gt;Â»
principle of the service is trivial.&lt;/p&gt;
&lt;div class="section" id="tradeoffs"&gt;
&lt;h3&gt;Tradeoffs&lt;/h3&gt;
&lt;p&gt;Of course, we don't intend to compete with &lt;em&gt;CouchDB&lt;/em&gt; and are making some
concessions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Per default, records collections are isolated by user;&lt;/li&gt;
&lt;li&gt;There is no history of revisions;&lt;/li&gt;
&lt;li&gt;There is no diff between each revision;&lt;/li&gt;
&lt;li&gt;Per default, there is no automatic conflict resolution;&lt;/li&gt;
&lt;li&gt;There is no stream synchronization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we are not mistaken, these tradeoffs exclude the possibility of
implementing &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb/blob/master/lib/adapters/http/http.js#L721-L946"&gt;a PouchDB adapter&lt;/a&gt; for the HTTP-based synchronisation protocol of &lt;em&gt;Cliquet&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Too bad since it would have been a great opportunity to capitalize on the user
experience of &lt;em&gt;PouchDB&lt;/em&gt; regarding the synchronisation client.&lt;/p&gt;
&lt;p&gt;However, we have some interesting features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No map-reduce;&lt;/li&gt;
&lt;li&gt;Partial and/or ordered and/or paginated synchronisation;&lt;/li&gt;
&lt;li&gt;The client can choose, with headers, to delete the data or to accept the
server version;&lt;/li&gt;
&lt;li&gt;A single server is deployed for N apps;&lt;/li&gt;
&lt;li&gt;Self hosting is dead simple;&lt;/li&gt;
&lt;li&gt;The client can choose not to use local storage at all;&lt;/li&gt;
&lt;li&gt;The JavaScript client will have its local store management delegated (we're
thinking about &lt;a class="reference external" href="https://github.com/mozilla/localForage"&gt;LocalForage&lt;/a&gt; or
&lt;a class="reference external" href="https://github.com/dfahlander/Dexie.js"&gt;Dexie.js&lt;/a&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And we are complying with &lt;a class="reference external" href="#storage-specs"&gt;the specs we drew at the beginning of the article&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="philosophical-arguments"&gt;
&lt;h3&gt;Philosophical arguments&lt;/h3&gt;
&lt;p&gt;It's &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Law_of_the_instrument"&gt;illusionary to think that we can achieve everything with a single tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have other use cases that seem to fit with &lt;em&gt;PouchDB&lt;/em&gt; (&lt;em&gt;no concept of
permission or sharing, JavaScript environment, ...&lt;/em&gt;). We'll take advantage of it
when relevant!&lt;/p&gt;
&lt;p&gt;The ecosystem we want to build should address the use cases that are badly
handled by &lt;em&gt;PouchDB&lt;/em&gt;. It should be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Based on our very simple protocol;&lt;/li&gt;
&lt;li&gt;Minimalist and with multiple purposes (&lt;em&gt;like our very French 2CV&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;Naive (&lt;em&gt;no rocket-science&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;Without magic (&lt;em&gt;explicit and easy to reimplement from scratch&lt;/em&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/rationale.html"&gt;The philosophy and the features of our Python toolkit, Cliquet&lt;/a&gt;, will of course be honoured :)&lt;/p&gt;
&lt;p&gt;As for &lt;em&gt;Remote Storage&lt;/em&gt;, whenever we face the need, we will proud to join
this initiative. However, as for now, it seems risky to start by bending the
solution to our own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="practical-arguments"&gt;
&lt;h3&gt;Practical arguments&lt;/h3&gt;
&lt;p&gt;Before being willingly to deploy a &lt;em&gt;CouchDB&lt;/em&gt; solution, Mozilla &lt;em&gt;ops&lt;/em&gt; will ask us
to precisely prove that it's not currently doable with experienced stacks (e.g.
MySQL, Redis, PostgreSQL).&lt;/p&gt;
&lt;p&gt;We will also have to guarantee a minimum 5 years lifetime regarding the data. With
&lt;em&gt;Cliquet&lt;/em&gt;, using the PostgreSQL backend, our data is persisted in &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/blob/40aa33/cliquet/storage/postgresql/schema.sql#L14-L28"&gt;a flat PostgreSQL schema&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This wouldn't be the case with a LevelDown adapter that handles revisions split
in a key-value scheme.&lt;/p&gt;
&lt;p&gt;If we based our service on Cliquet, like we did with &lt;a class="reference external" href="http://kinto.readthedocs.org"&gt;Kinto&lt;/a&gt;, all the automation work of deploying
(&lt;em&gt;monitoring, RPM builds, Puppet...&lt;/em&gt;) that was done for &lt;em&gt;Reading List&lt;/em&gt; will be
completely reusable.&lt;/p&gt;
&lt;p&gt;As said before, if we go with another totally new stack, we will have to start
again from scratch, including lapping, profiling, optimizing, all of which has
already been done during the first quarter of this year for Reading List.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps"&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;It's still time to change our strategy :) And we welcome any feedback!
It's always a difficult decision to make... &lt;tt class="docutils literal"&gt;&amp;lt;/troll call&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twist an existing ecosystem vs build a new custom one;&lt;/li&gt;
&lt;li&gt;Master the whole system or to integrate our solution;&lt;/li&gt;
&lt;li&gt;Contribute vs redo;&lt;/li&gt;
&lt;li&gt;Guide vs follow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We really seek to join the &lt;a class="reference external" href="https://nobackend.org/"&gt;no-backend&lt;/a&gt; initiative.
This first step might lead us to converge in the end! Maybe our service will end
up being compatible with Remote Storage, maybe PouchDB will become more agnostic
regarding the synchronisation protocol...&lt;/p&gt;
&lt;img alt="XKCD â€” Standards https://xkcd.com/927/" src="http://www.servicedenuages.fr/en/../images/standards.png" style="width: 500px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Using this new ecosystem for the Â« Payments Â» project will allow us to setup a
suitable permission system (&lt;em&gt;probably built on OAuth scopes&lt;/em&gt;). We are also
looking forward to &lt;a class="reference external" href="http://blog.daybed.io/daybed-revival.html"&gt;capitalizing on our Daybed experience for this project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We'll also extract some parts of the clients source code that were implemented
for &lt;em&gt;Reading List&lt;/em&gt; in order to provide a minimalist JavaScript client.&lt;/p&gt;
&lt;p&gt;By going this way, we are taking several risks:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reinventing a wheel we don't know;&lt;/li&gt;
&lt;li&gt;failing to make the &lt;em&gt;Cliquet&lt;/em&gt; ecosystem a community project;&lt;/li&gt;
&lt;li&gt;failing to place &lt;em&gt;Cliquet&lt;/em&gt; in the niche for the use cases that are not
covered with &lt;em&gt;PouchDB&lt;/em&gt; :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;Giovanni Ornaghi said&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Rolling out your set of webservices, push notifications, or background services
might give you more control, but at the same time it will force you to engineer,
write, test, and maintain a whole new ecosystem.&lt;/blockquote&gt;
&lt;p&gt;And this ecosystem is precisely the one that &lt;em&gt;Mozilla Cloud Services&lt;/em&gt; team
is in charge of!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The &lt;a class="reference external" href="https://sharesome.5apps.com/"&gt;Sharesome project&lt;/a&gt; allows for some
public sharing of one's resources from one's &lt;em&gt;Remote Storage&lt;/em&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Thu, 30 Apr 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-04-30:en/generic-storage-ecosystem</guid></item><item><title>Service de nuages !</title><link>http://www.servicedenuages.fr/en/service-de-nuages</link><description>&lt;p&gt;A bunch of changes since the beginning of the year for the "cloud-services"
frenchies!&lt;/p&gt;
&lt;p&gt;First of all, two new recruits are here to complement the team:
&lt;a class="reference external" href="https://nicolas.perriault.net/"&gt;n1k0&lt;/a&gt; and &lt;a class="reference external" href="http://mathieu-leplatre.info"&gt;Mathieu&lt;/a&gt; are now helping out &lt;a class="reference external" href="http://ziade.org/"&gt;Tarek&lt;/a&gt;, &lt;a class="reference external" href="http://natim.ionyse.com"&gt;RÃ©my&lt;/a&gt; and &lt;a class="reference external" href="http://notmyidea.org"&gt;Alexis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The starting of this year has seen the launch of &lt;a class="reference external" href="https://www.mozilla.org/en-US/firefox/hello/"&gt;Firefox Hello&lt;/a&gt; which allowed us to scale up
&lt;a class="reference external" href="https://github.com/mozilla-services/loop-server"&gt;the server&lt;/a&gt;,
written in Node.jsÂ®.&lt;/p&gt;
&lt;div class="section" id="a-readinglist-server"&gt;
&lt;h2&gt;A readinglist server&lt;/h2&gt;
&lt;p&gt;In parallel, a project about &lt;a class="reference external" href="https://readinglist.readthedocs.org"&gt;synchronizing reading lists&lt;/a&gt; (&lt;em&gt;Reading List&lt;/em&gt;) started.
The idea is to be able to bookmark pages to "read for later" and continue the
reading on any synchronized device (Firefox for Android or Firefox Desktop). An
open source counterpart to &lt;a class="reference external" href="http://getpocket.com"&gt;Pocket&lt;/a&gt;, in some regards, which is possible to host
yourself.&lt;/p&gt;
&lt;img alt="Capture of Firefox nightly with the readinglist." src="http://www.servicedenuages.fr/en/../images/readinglist-screenshot.png" style="width: 953px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;To build this service, we could have reused &lt;a class="reference external" href="https://github.com/mozilla-services/server-syncstorage"&gt;Firefox sync&lt;/a&gt; , after all it's
a robust synchronisation service, built on top of &lt;a class="reference external" href="http://cornice.readthedocs.org/"&gt;Cornice&lt;/a&gt;. But &lt;em&gt;Sync&lt;/em&gt; hasn't
been thought to guarantee strong data integrity and it was too complex to change that
deeply.&lt;/p&gt;
&lt;p&gt;We could also have created yet another application to expose an API and
persist data in a database.&lt;/p&gt;
&lt;p&gt;But, this little new team isn't here just by luck.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-daybed-team"&gt;
&lt;h2&gt;The Â«Daybed TeamÂ»&lt;/h2&gt;
&lt;p&gt;We share a vision: a generic data storage service! Maybe it brings to memories
&lt;a class="reference external" href="https://daybed.io"&gt;a certain project named Daybed&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;For client applications, JavaScript or other, using this service should be as
easy as a pie! The application handles its data locally (offline-first) and
synchronizes upon request.&lt;/p&gt;
&lt;p&gt;Here, the heart of the &lt;em&gt;Reading List&lt;/em&gt; service is a "CRUD" API (Create, Retrieve,
Update, Delete), which handles synchronisation and authentication. We made the
bet to do a "simple" API, with the less specific code as possible, which would
create the basis of a generic service. Also because it's likely that other
similar projects will follow.&lt;/p&gt;
&lt;p&gt;A bunch of experience was accumulated within the team, on one hand with the
creation and evolution of &lt;em&gt;Firefox Sync&lt;/em&gt; and on the other hand with &lt;em&gt;Daybed&lt;/em&gt;
our side-project. We try to not reproduce the same mistakes while keeping
concepts which proved to be valid.&lt;/p&gt;
&lt;p&gt;For instance, we kept the &lt;em&gt;timestamp&lt;/em&gt; mechanism of &lt;em&gt;Sync&lt;/em&gt;, which is used to
synchronize collections. As these problematics are recurring or even impossible
to avoid, we decided to build on top of this synchronization protocol and to
dissociate it from the readinglist project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-one-way-mechanism"&gt;
&lt;h2&gt;The one-way mechanism&lt;/h2&gt;
&lt;p&gt;As a first stone to build the cathedral, we created &lt;a class="reference external" href="https://cliquet.readthedocs.org"&gt;Cliquet&lt;/a&gt;, which main idea is to have an
implementation of this protocol in Python, while factorizing all our good
practices (notably for putting everything in production).&lt;/p&gt;
&lt;img alt="Cliquet's logo" class="align-right" src="http://www.servicedenuages.fr/en/../images/cliquet-logo.png" style="width: 300px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;The good thing with protocols (as opposed to monoliths) is that if you prefer
Asyncio, io.js or Go, we will encourage you to publish your alternative
implementation!&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;Cliquet&lt;/em&gt;, the code of the readinglist service consists into defining
a schema for the records and force some field values on certain calls. The size
of the project is dramatically reduced to a dozen lines of code.&lt;/p&gt;
&lt;p&gt;As to the future generic data storage service, &lt;a class="reference external" href="http://kinto.readthedocs.org"&gt;the project&lt;/a&gt; just started but it really is!
It can already be used as a storage backend in a &lt;em&gt;Cliquet&lt;/em&gt; application, and
this was &lt;a class="reference external" href="https://github.com/mozilla-services/kinto/blob/0.2.1/kinto/views/collection.py"&gt;implemented in only 20 lines of code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Oh, and this time we will build features only from real use cases which are
coming along the way. It might seem silly, but on &lt;em&gt;Daybed&lt;/em&gt; we never made that point.&lt;/p&gt;
&lt;p&gt;In future articles, we want to describe the good practices we put together in
the protocol (or &lt;em&gt;Cliquet&lt;/em&gt;), certain specific technical points and present our
vision with examples and tutorials.&lt;/p&gt;
&lt;p&gt;See you soon, then!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Thu, 16 Apr 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-04-16:en/service-de-nuages</guid></item><item><title>Le printemps</title><link>http://www.servicedenuages.fr/en/spring</link><description>&lt;p&gt;It's spring already, and a good time to tidy-up a bit our minds!&lt;/p&gt;
&lt;p&gt;We've been stacking interesting experiences without really sharing them in
writings, so now's the time.&lt;/p&gt;
&lt;p&gt;There were a francophone conference about Hawk the past year, and some articles
in English in the Mozilla blog, but sometimes the English language doesn't let
us express ourselves in a compelling way.&lt;/p&gt;
&lt;p&gt;That's why, in this beginning of spring 2015, we propose a set of articles
written in French and translated in English whenever we can, about what we do in
our little &lt;em&gt;Service des nuages&lt;/em&gt; team at Mozilla.&lt;/p&gt;
&lt;img alt="Our very own logo" src="http://www.servicedenuages.fr/en/../images/service_de_nuages.png" style="width: 2268px; height: auto; max-width: 100%;"/&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Service de Nuages</dc:creator><pubDate>Wed, 15 Apr 2015 00:00:00 +0200</pubDate><guid>tag:www.servicedenuages.fr,2015-04-15:en/spring</guid></item></channel></rss>